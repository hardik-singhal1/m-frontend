{
    "id": "terraform-aws-modules/vpc/aws/3.7.0",
    "owner": "antonbabenko",
    "namespace": "terraform-aws-modules",
    "name": "vpc",
    "version": "3.7.0",
    "provider": "aws",
    "provider_logo_url": "/images/providers/aws.png",
    "description": "Terraform module which creates VPC resources on AWS",
    "source": "https://github.com/terraform-aws-modules/terraform-aws-vpc",
    "tag": "v3.7.0",
    "published_at": "2021-08-31T14:19:08.143429Z",
    "downloads": 10516137,
    "verified": true,
    "root": {
        "path": "",
        "name": "vpc",
        "readme": "# AWS VPC Terraform module\n\nTerraform module which creates VPC resources on AWS.\n\n## Usage\n\n```hcl\nmodule \"vpc\" {\n  source = \"terraform-aws-modules/vpc/aws\"\n\n  name = \"my-vpc\"\n  cidr = \"10.0.0.0/16\"\n\n  azs             = [\"eu-west-1a\", \"eu-west-1b\", \"eu-west-1c\"]\n  private_subnets = [\"10.0.1.0/24\", \"10.0.2.0/24\", \"10.0.3.0/24\"]\n  public_subnets  = [\"10.0.101.0/24\", \"10.0.102.0/24\", \"10.0.103.0/24\"]\n\n  enable_nat_gateway = true\n  enable_vpn_gateway = true\n\n  tags = {\n    Terraform = \"true\"\n    Environment = \"dev\"\n  }\n}\n```\n\n## External NAT Gateway IPs\n\nBy default this module will provision new Elastic IPs for the VPC's NAT Gateways.\nThis means that when creating a new VPC, new IPs are allocated, and when that VPC is destroyed those IPs are released.\nSometimes it is handy to keep the same IPs even after the VPC is destroyed and re-created.\nTo that end, it is possible to assign existing IPs to the NAT Gateways.\nThis prevents the destruction of the VPC from releasing those IPs, while making it possible that a re-created VPC uses the same IPs.\n\nTo achieve this, allocate the IPs outside the VPC module declaration.\n\n```hcl\nresource \"aws_eip\" \"nat\" {\n  count = 3\n\n  vpc = true\n}\n```\n\nThen, pass the allocated IPs as a parameter to this module.\n\n```hcl\nmodule \"vpc\" {\n  source = \"terraform-aws-modules/vpc/aws\"\n\n  # The rest of arguments are omitted for brevity\n\n  enable_nat_gateway  = true\n  single_nat_gateway  = false\n  reuse_nat_ips       = true                    # \u003c= Skip creation of EIPs for the NAT Gateways\n  external_nat_ip_ids = \"${aws_eip.nat.*.id}\"   # \u003c= IPs specified here as input to the module\n}\n```\n\nNote that in the example we allocate 3 IPs because we will be provisioning 3 NAT Gateways (due to `single_nat_gateway = false` and having 3 subnets).\nIf, on the other hand, `single_nat_gateway = true`, then `aws_eip.nat` would only need to allocate 1 IP.\nPassing the IPs into the module is done by setting two variables `reuse_nat_ips = true` and `external_nat_ip_ids = \"${aws_eip.nat.*.id}\"`.\n\n## NAT Gateway Scenarios\n\nThis module supports three scenarios for creating NAT gateways. Each will be explained in further detail in the corresponding sections.\n\n- One NAT Gateway per subnet (default behavior)\n  - `enable_nat_gateway = true`\n  - `single_nat_gateway = false`\n  - `one_nat_gateway_per_az = false`\n- Single NAT Gateway\n  - `enable_nat_gateway = true`\n  - `single_nat_gateway = true`\n  - `one_nat_gateway_per_az = false`\n- One NAT Gateway per availability zone\n  - `enable_nat_gateway = true`\n  - `single_nat_gateway = false`\n  - `one_nat_gateway_per_az = true`\n\nIf both `single_nat_gateway` and `one_nat_gateway_per_az` are set to `true`, then `single_nat_gateway` takes precedence.\n\n### One NAT Gateway per subnet (default)\n\nBy default, the module will determine the number of NAT Gateways to create based on the the `max()` of the private subnet lists (`database_subnets`, `elasticache_subnets`, `private_subnets`, and `redshift_subnets`). The module **does not** take into account the number of `intra_subnets`, since the latter are designed to have no Internet access via NAT Gateway. For example, if your configuration looks like the following:\n\n```hcl\ndatabase_subnets    = [\"10.0.21.0/24\", \"10.0.22.0/24\"]\nelasticache_subnets = [\"10.0.31.0/24\", \"10.0.32.0/24\"]\nprivate_subnets     = [\"10.0.1.0/24\", \"10.0.2.0/24\", \"10.0.3.0/24\", \"10.0.4.0/24\", \"10.0.5.0/24\"]\nredshift_subnets    = [\"10.0.41.0/24\", \"10.0.42.0/24\"]\nintra_subnets       = [\"10.0.51.0/24\", \"10.0.52.0/24\", \"10.0.53.0/24\"]\n```\n\nThen `5` NAT Gateways will be created since `5` private subnet CIDR blocks were specified.\n\n### Single NAT Gateway\n\nIf `single_nat_gateway = true`, then all private subnets will route their Internet traffic through this single NAT gateway. The NAT gateway will be placed in the first public subnet in your `public_subnets` block.\n\n### One NAT Gateway per availability zone\n\nIf `one_nat_gateway_per_az = true` and `single_nat_gateway = false`, then the module will place one NAT gateway in each availability zone you specify in `var.azs`. There are some requirements around using this feature flag:\n\n- The variable `var.azs` **must** be specified.\n- The number of public subnet CIDR blocks specified in `public_subnets` **must** be greater than or equal to the number of availability zones specified in `var.azs`. This is to ensure that each NAT Gateway has a dedicated public subnet to deploy to.\n\n## \"private\" versus \"intra\" subnets\n\nBy default, if NAT Gateways are enabled, private subnets will be configured with routes for Internet traffic that point at the NAT Gateways configured by use of the above options.\n\nIf you need private subnets that should have no Internet routing (in the sense of [RFC1918 Category 1 subnets](https://tools.ietf.org/html/rfc1918)), `intra_subnets` should be specified. An example use case is configuration of AWS Lambda functions within a VPC, where AWS Lambda functions only need to pass traffic to internal resources or VPC endpoints for AWS services.\n\nSince AWS Lambda functions allocate Elastic Network Interfaces in proportion to the traffic received ([read more](https://docs.aws.amazon.com/lambda/latest/dg/vpc.html)), it can be useful to allocate a large private subnet for such allocations, while keeping the traffic they generate entirely internal to the VPC.\n\nYou can add additional tags with `intra_subnet_tags` as with other subnet types.\n\n## VPC Flow Log\n\nVPC Flow Log allows to capture IP traffic for a specific network interface (ENI), subnet, or entire VPC. This module supports enabling or disabling VPC Flow Logs for entire VPC. If you need to have VPC Flow Logs for subnet or ENI, you have to manage it outside of this module with [aws_flow_log resource](https://www.terraform.io/docs/providers/aws/r/flow_log.html).\n\n### Permissions Boundary\n\nIf your organization requires a permissions boundary to be attached to the VPC Flow Log role, make sure that you specify an ARN of the permissions boundary policy as `vpc_flow_log_permissions_boundary` argument. Read more about required [IAM policy for publishing flow logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-cwl.html#flow-logs-iam).\n\n## Conditional creation\n\nPrior to Terraform 0.13, you were unable to specify `count` in a module block. If you wish to toggle the creation of the module's resources in an older (pre 0.13) version of Terraform, you can use the `create_vpc` argument.\n\n```hcl\n# This VPC will not be created\nmodule \"vpc\" {\n  source = \"terraform-aws-modules/vpc/aws\"\n\n  create_vpc = false\n  # ... omitted\n}\n```\n\n## Public access to RDS instances\n\nSometimes it is handy to have public access to RDS instances (it is not recommended for production) by specifying these arguments:\n\n```hcl\n  create_database_subnet_group           = true\n  create_database_subnet_route_table     = true\n  create_database_internet_gateway_route = true\n\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n```\n\n## Network Access Control Lists (ACL or NACL)\n\nThis module can manage network ACL and rules. Once VPC is created, AWS creates the default network ACL, which can be controlled using this module (`manage_default_network_acl = true`).\n\nAlso, each type of subnet may have its own network ACL with custom rules per subnet. Eg, set `public_dedicated_network_acl = true` to use dedicated network ACL for the public subnets; set values of `public_inbound_acl_rules` and `public_outbound_acl_rules` to specify all the NACL rules you need to have on public subnets (see `variables.tf` for default values and structures).\n\nBy default, all subnets are associated with the default network ACL.\n\n## Public access to Redshift cluster\n\nSometimes it is handy to have public access to Redshift clusters (for example if you need to access it by Kinesis - VPC endpoint for Kinesis is not yet supported by Redshift) by specifying these arguments:\n\n```hcl\n  enable_public_redshift = true  # \u003c= By default Redshift subnets will be associated with the private route table\n```\n\n## Transit Gateway (TGW) integration\n\nIt is possible to integrate this VPC module with [terraform-aws-transit-gateway module](https://github.com/terraform-aws-modules/terraform-aws-transit-gateway) which handles the creation of TGW resources and VPC attachments. See [complete example there](https://github.com/terraform-aws-modules/terraform-aws-transit-gateway/tree/master/examples/complete).\n\n## Examples\n\n- [Simple VPC](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/simple-vpc)\n- [Simple VPC with secondary CIDR blocks](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/secondary-cidr-blocks)\n- [Complete VPC](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/complete-vpc) with VPC Endpoints.\n- [VPC with IPv6 enabled](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/ipv6)\n- [Network ACL](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/network-acls)\n- [VPC Flow Logs](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/vpc-flow-logs)\n- [VPC with Outpost](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/outpost)\n- [Manage Default VPC](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/manage-default-vpc)\n- [Few tests and edge case examples](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/examples/issues)\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.38 |\n\n## Providers\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"provider_aws\"\u003e\u003c/a\u003e [aws](#provider\\_aws) | \u003e= 3.38 |\n\n## Modules\n\nNo modules.\n\n## Resources\n\n| Name | Type |\n|------|------|\n| [aws_cloudwatch_log_group.flow_log](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group) | resource |\n| [aws_customer_gateway.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/customer_gateway) | resource |\n| [aws_db_subnet_group.database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_subnet_group) | resource |\n| [aws_default_network_acl.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_network_acl) | resource |\n| [aws_default_route_table.default](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table) | resource |\n| [aws_default_security_group.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group) | resource |\n| [aws_default_vpc.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc) | resource |\n| [aws_egress_only_internet_gateway.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/egress_only_internet_gateway) | resource |\n| [aws_eip.nat](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eip) | resource |\n| [aws_elasticache_subnet_group.elasticache](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_subnet_group) | resource |\n| [aws_flow_log.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/flow_log) | resource |\n| [aws_iam_policy.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy) | resource |\n| [aws_iam_role.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n| [aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) | resource |\n| [aws_internet_gateway.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/internet_gateway) | resource |\n| [aws_nat_gateway.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/nat_gateway) | resource |\n| [aws_network_acl.database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl.elasticache](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl.intra](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl.outpost](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl.private](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl.public](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl.redshift](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl) | resource |\n| [aws_network_acl_rule.database_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.database_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.elasticache_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.elasticache_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.intra_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.intra_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.outpost_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.outpost_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.private_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.private_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.public_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.public_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.redshift_inbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_network_acl_rule.redshift_outbound](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule) | resource |\n| [aws_redshift_subnet_group.redshift](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_subnet_group) | resource |\n| [aws_route.database_internet_gateway](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route.database_ipv6_egress](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route.database_nat_gateway](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route.private_ipv6_egress](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route.private_nat_gateway](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route.public_internet_gateway](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route.public_internet_gateway_ipv6](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route) | resource |\n| [aws_route_table.database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table) | resource |\n| [aws_route_table.elasticache](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table) | resource |\n| [aws_route_table.intra](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table) | resource |\n| [aws_route_table.private](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table) | resource |\n| [aws_route_table.public](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table) | resource |\n| [aws_route_table.redshift](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table) | resource |\n| [aws_route_table_association.database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.elasticache](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.intra](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.outpost](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.private](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.public](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.redshift](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_route_table_association.redshift_public](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table_association) | resource |\n| [aws_subnet.database](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_subnet.elasticache](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_subnet.intra](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_subnet.outpost](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_subnet.private](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_subnet.public](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_subnet.redshift](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet) | resource |\n| [aws_vpc.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc) | resource |\n| [aws_vpc_dhcp_options.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_dhcp_options) | resource |\n| [aws_vpc_dhcp_options_association.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_dhcp_options_association) | resource |\n| [aws_vpc_ipv4_cidr_block_association.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipv4_cidr_block_association) | resource |\n| [aws_vpn_gateway.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpn_gateway) | resource |\n| [aws_vpn_gateway_attachment.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpn_gateway_attachment) | resource |\n| [aws_vpn_gateway_route_propagation.intra](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpn_gateway_route_propagation) | resource |\n| [aws_vpn_gateway_route_propagation.private](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpn_gateway_route_propagation) | resource |\n| [aws_vpn_gateway_route_propagation.public](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpn_gateway_route_propagation) | resource |\n| [aws_iam_policy_document.flow_log_cloudwatch_assume_role](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n| [aws_iam_policy_document.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n\n## Inputs\n\n| Name | Description | Type | Default | Required |\n|------|-------------|------|---------|:--------:|\n| \u003ca name=\"input_amazon_side_asn\"\u003e\u003c/a\u003e [amazon\\_side\\_asn](#input\\_amazon\\_side\\_asn) | The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN. | `string` | `\"64512\"` | no |\n| \u003ca name=\"input_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [assign\\_ipv6\\_address\\_on\\_creation](#input\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `false` | no |\n| \u003ca name=\"input_azs\"\u003e\u003c/a\u003e [azs](#input\\_azs) | A list of availability zones names or ids in the region | `list(string)` | `[]` | no |\n| \u003ca name=\"input_cidr\"\u003e\u003c/a\u003e [cidr](#input\\_cidr) | The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden | `string` | `\"0.0.0.0/0\"` | no |\n| \u003ca name=\"input_create_database_internet_gateway_route\"\u003e\u003c/a\u003e [create\\_database\\_internet\\_gateway\\_route](#input\\_create\\_database\\_internet\\_gateway\\_route) | Controls if an internet gateway route for public database access should be created | `bool` | `false` | no |\n| \u003ca name=\"input_create_database_nat_gateway_route\"\u003e\u003c/a\u003e [create\\_database\\_nat\\_gateway\\_route](#input\\_create\\_database\\_nat\\_gateway\\_route) | Controls if a nat gateway route should be created to give internet access to the database subnets | `bool` | `false` | no |\n| \u003ca name=\"input_create_database_subnet_group\"\u003e\u003c/a\u003e [create\\_database\\_subnet\\_group](#input\\_create\\_database\\_subnet\\_group) | Controls if database subnet group should be created (n.b. database\\_subnets must also be set) | `bool` | `true` | no |\n| \u003ca name=\"input_create_database_subnet_route_table\"\u003e\u003c/a\u003e [create\\_database\\_subnet\\_route\\_table](#input\\_create\\_database\\_subnet\\_route\\_table) | Controls if separate route table for database should be created | `bool` | `false` | no |\n| \u003ca name=\"input_create_egress_only_igw\"\u003e\u003c/a\u003e [create\\_egress\\_only\\_igw](#input\\_create\\_egress\\_only\\_igw) | Controls if an Egress Only Internet Gateway is created and its related routes. | `bool` | `true` | no |\n| \u003ca name=\"input_create_elasticache_subnet_group\"\u003e\u003c/a\u003e [create\\_elasticache\\_subnet\\_group](#input\\_create\\_elasticache\\_subnet\\_group) | Controls if elasticache subnet group should be created | `bool` | `true` | no |\n| \u003ca name=\"input_create_elasticache_subnet_route_table\"\u003e\u003c/a\u003e [create\\_elasticache\\_subnet\\_route\\_table](#input\\_create\\_elasticache\\_subnet\\_route\\_table) | Controls if separate route table for elasticache should be created | `bool` | `false` | no |\n| \u003ca name=\"input_create_flow_log_cloudwatch_iam_role\"\u003e\u003c/a\u003e [create\\_flow\\_log\\_cloudwatch\\_iam\\_role](#input\\_create\\_flow\\_log\\_cloudwatch\\_iam\\_role) | Whether to create IAM role for VPC Flow Logs | `bool` | `false` | no |\n| \u003ca name=\"input_create_flow_log_cloudwatch_log_group\"\u003e\u003c/a\u003e [create\\_flow\\_log\\_cloudwatch\\_log\\_group](#input\\_create\\_flow\\_log\\_cloudwatch\\_log\\_group) | Whether to create CloudWatch log group for VPC Flow Logs | `bool` | `false` | no |\n| \u003ca name=\"input_create_igw\"\u003e\u003c/a\u003e [create\\_igw](#input\\_create\\_igw) | Controls if an Internet Gateway is created for public subnets and the related routes that connect them. | `bool` | `true` | no |\n| \u003ca name=\"input_create_redshift_subnet_group\"\u003e\u003c/a\u003e [create\\_redshift\\_subnet\\_group](#input\\_create\\_redshift\\_subnet\\_group) | Controls if redshift subnet group should be created | `bool` | `true` | no |\n| \u003ca name=\"input_create_redshift_subnet_route_table\"\u003e\u003c/a\u003e [create\\_redshift\\_subnet\\_route\\_table](#input\\_create\\_redshift\\_subnet\\_route\\_table) | Controls if separate route table for redshift should be created | `bool` | `false` | no |\n| \u003ca name=\"input_create_vpc\"\u003e\u003c/a\u003e [create\\_vpc](#input\\_create\\_vpc) | Controls if VPC should be created (it affects almost all resources) | `bool` | `true` | no |\n| \u003ca name=\"input_customer_gateway_tags\"\u003e\u003c/a\u003e [customer\\_gateway\\_tags](#input\\_customer\\_gateway\\_tags) | Additional tags for the Customer Gateway | `map(string)` | `{}` | no |\n| \u003ca name=\"input_customer_gateways\"\u003e\u003c/a\u003e [customer\\_gateways](#input\\_customer\\_gateways) | Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address) | `map(map(any))` | `{}` | no |\n| \u003ca name=\"input_database_acl_tags\"\u003e\u003c/a\u003e [database\\_acl\\_tags](#input\\_database\\_acl\\_tags) | Additional tags for the database subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_database_dedicated_network_acl\"\u003e\u003c/a\u003e [database\\_dedicated\\_network\\_acl](#input\\_database\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for database subnets | `bool` | `false` | no |\n| \u003ca name=\"input_database_inbound_acl_rules\"\u003e\u003c/a\u003e [database\\_inbound\\_acl\\_rules](#input\\_database\\_inbound\\_acl\\_rules) | Database subnets inbound network ACL rules | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_database_outbound_acl_rules\"\u003e\u003c/a\u003e [database\\_outbound\\_acl\\_rules](#input\\_database\\_outbound\\_acl\\_rules) | Database subnets outbound network ACL rules | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_database_route_table_tags\"\u003e\u003c/a\u003e [database\\_route\\_table\\_tags](#input\\_database\\_route\\_table\\_tags) | Additional tags for the database route tables | `map(string)` | `{}` | no |\n| \u003ca name=\"input_database_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [database\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_database\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_database_subnet_group_name\"\u003e\u003c/a\u003e [database\\_subnet\\_group\\_name](#input\\_database\\_subnet\\_group\\_name) | Name of database subnet group | `string` | `null` | no |\n| \u003ca name=\"input_database_subnet_group_tags\"\u003e\u003c/a\u003e [database\\_subnet\\_group\\_tags](#input\\_database\\_subnet\\_group\\_tags) | Additional tags for the database subnet group | `map(string)` | `{}` | no |\n| \u003ca name=\"input_database_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [database\\_subnet\\_ipv6\\_prefixes](#input\\_database\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_database_subnet_suffix\"\u003e\u003c/a\u003e [database\\_subnet\\_suffix](#input\\_database\\_subnet\\_suffix) | Suffix to append to database subnets name | `string` | `\"db\"` | no |\n| \u003ca name=\"input_database_subnet_tags\"\u003e\u003c/a\u003e [database\\_subnet\\_tags](#input\\_database\\_subnet\\_tags) | Additional tags for the database subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_database_subnets\"\u003e\u003c/a\u003e [database\\_subnets](#input\\_database\\_subnets) | A list of database subnets | `list(string)` | `[]` | no |\n| \u003ca name=\"input_default_network_acl_egress\"\u003e\u003c/a\u003e [default\\_network\\_acl\\_egress](#input\\_default\\_network\\_acl\\_egress) | List of maps of egress rules to set on the Default Network ACL | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"action\": \"allow\",\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_no\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  },\u003cbr\u003e  {\u003cbr\u003e    \"action\": \"allow\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"ipv6_cidr_block\": \"::/0\",\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_no\": 101,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_default_network_acl_ingress\"\u003e\u003c/a\u003e [default\\_network\\_acl\\_ingress](#input\\_default\\_network\\_acl\\_ingress) | List of maps of ingress rules to set on the Default Network ACL | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"action\": \"allow\",\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_no\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  },\u003cbr\u003e  {\u003cbr\u003e    \"action\": \"allow\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"ipv6_cidr_block\": \"::/0\",\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_no\": 101,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_default_network_acl_name\"\u003e\u003c/a\u003e [default\\_network\\_acl\\_name](#input\\_default\\_network\\_acl\\_name) | Name to be used on the Default Network ACL | `string` | `\"\"` | no |\n| \u003ca name=\"input_default_network_acl_tags\"\u003e\u003c/a\u003e [default\\_network\\_acl\\_tags](#input\\_default\\_network\\_acl\\_tags) | Additional tags for the Default Network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_default_route_table_propagating_vgws\"\u003e\u003c/a\u003e [default\\_route\\_table\\_propagating\\_vgws](#input\\_default\\_route\\_table\\_propagating\\_vgws) | List of virtual gateways for propagation | `list(string)` | `[]` | no |\n| \u003ca name=\"input_default_route_table_routes\"\u003e\u003c/a\u003e [default\\_route\\_table\\_routes](#input\\_default\\_route\\_table\\_routes) | Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route | `list(map(string))` | `[]` | no |\n| \u003ca name=\"input_default_route_table_tags\"\u003e\u003c/a\u003e [default\\_route\\_table\\_tags](#input\\_default\\_route\\_table\\_tags) | Additional tags for the default route table | `map(string)` | `{}` | no |\n| \u003ca name=\"input_default_security_group_egress\"\u003e\u003c/a\u003e [default\\_security\\_group\\_egress](#input\\_default\\_security\\_group\\_egress) | List of maps of egress rules to set on the default security group | `list(map(string))` | `null` | no |\n| \u003ca name=\"input_default_security_group_ingress\"\u003e\u003c/a\u003e [default\\_security\\_group\\_ingress](#input\\_default\\_security\\_group\\_ingress) | List of maps of ingress rules to set on the default security group | `list(map(string))` | `null` | no |\n| \u003ca name=\"input_default_security_group_name\"\u003e\u003c/a\u003e [default\\_security\\_group\\_name](#input\\_default\\_security\\_group\\_name) | Name to be used on the default security group | `string` | `\"default\"` | no |\n| \u003ca name=\"input_default_security_group_tags\"\u003e\u003c/a\u003e [default\\_security\\_group\\_tags](#input\\_default\\_security\\_group\\_tags) | Additional tags for the default security group | `map(string)` | `{}` | no |\n| \u003ca name=\"input_default_vpc_enable_classiclink\"\u003e\u003c/a\u003e [default\\_vpc\\_enable\\_classiclink](#input\\_default\\_vpc\\_enable\\_classiclink) | Should be true to enable ClassicLink in the Default VPC | `bool` | `false` | no |\n| \u003ca name=\"input_default_vpc_enable_dns_hostnames\"\u003e\u003c/a\u003e [default\\_vpc\\_enable\\_dns\\_hostnames](#input\\_default\\_vpc\\_enable\\_dns\\_hostnames) | Should be true to enable DNS hostnames in the Default VPC | `bool` | `false` | no |\n| \u003ca name=\"input_default_vpc_enable_dns_support\"\u003e\u003c/a\u003e [default\\_vpc\\_enable\\_dns\\_support](#input\\_default\\_vpc\\_enable\\_dns\\_support) | Should be true to enable DNS support in the Default VPC | `bool` | `true` | no |\n| \u003ca name=\"input_default_vpc_name\"\u003e\u003c/a\u003e [default\\_vpc\\_name](#input\\_default\\_vpc\\_name) | Name to be used on the Default VPC | `string` | `\"\"` | no |\n| \u003ca name=\"input_default_vpc_tags\"\u003e\u003c/a\u003e [default\\_vpc\\_tags](#input\\_default\\_vpc\\_tags) | Additional tags for the Default VPC | `map(string)` | `{}` | no |\n| \u003ca name=\"input_dhcp_options_domain_name\"\u003e\u003c/a\u003e [dhcp\\_options\\_domain\\_name](#input\\_dhcp\\_options\\_domain\\_name) | Specifies DNS name for DHCP options set (requires enable\\_dhcp\\_options set to true) | `string` | `\"\"` | no |\n| \u003ca name=\"input_dhcp_options_domain_name_servers\"\u003e\u003c/a\u003e [dhcp\\_options\\_domain\\_name\\_servers](#input\\_dhcp\\_options\\_domain\\_name\\_servers) | Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable\\_dhcp\\_options set to true) | `list(string)` | \u003cpre\u003e[\u003cbr\u003e  \"AmazonProvidedDNS\"\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_dhcp_options_netbios_name_servers\"\u003e\u003c/a\u003e [dhcp\\_options\\_netbios\\_name\\_servers](#input\\_dhcp\\_options\\_netbios\\_name\\_servers) | Specify a list of netbios servers for DHCP options set (requires enable\\_dhcp\\_options set to true) | `list(string)` | `[]` | no |\n| \u003ca name=\"input_dhcp_options_netbios_node_type\"\u003e\u003c/a\u003e [dhcp\\_options\\_netbios\\_node\\_type](#input\\_dhcp\\_options\\_netbios\\_node\\_type) | Specify netbios node\\_type for DHCP options set (requires enable\\_dhcp\\_options set to true) | `string` | `\"\"` | no |\n| \u003ca name=\"input_dhcp_options_ntp_servers\"\u003e\u003c/a\u003e [dhcp\\_options\\_ntp\\_servers](#input\\_dhcp\\_options\\_ntp\\_servers) | Specify a list of NTP servers for DHCP options set (requires enable\\_dhcp\\_options set to true) | `list(string)` | `[]` | no |\n| \u003ca name=\"input_dhcp_options_tags\"\u003e\u003c/a\u003e [dhcp\\_options\\_tags](#input\\_dhcp\\_options\\_tags) | Additional tags for the DHCP option set (requires enable\\_dhcp\\_options set to true) | `map(string)` | `{}` | no |\n| \u003ca name=\"input_elasticache_acl_tags\"\u003e\u003c/a\u003e [elasticache\\_acl\\_tags](#input\\_elasticache\\_acl\\_tags) | Additional tags for the elasticache subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_elasticache_dedicated_network_acl\"\u003e\u003c/a\u003e [elasticache\\_dedicated\\_network\\_acl](#input\\_elasticache\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets | `bool` | `false` | no |\n| \u003ca name=\"input_elasticache_inbound_acl_rules\"\u003e\u003c/a\u003e [elasticache\\_inbound\\_acl\\_rules](#input\\_elasticache\\_inbound\\_acl\\_rules) | Elasticache subnets inbound network ACL rules | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_elasticache_outbound_acl_rules\"\u003e\u003c/a\u003e [elasticache\\_outbound\\_acl\\_rules](#input\\_elasticache\\_outbound\\_acl\\_rules) | Elasticache subnets outbound network ACL rules | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_elasticache_route_table_tags\"\u003e\u003c/a\u003e [elasticache\\_route\\_table\\_tags](#input\\_elasticache\\_route\\_table\\_tags) | Additional tags for the elasticache route tables | `map(string)` | `{}` | no |\n| \u003ca name=\"input_elasticache_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_elasticache\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_elasticache_subnet_group_name\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_group\\_name](#input\\_elasticache\\_subnet\\_group\\_name) | Name of elasticache subnet group | `string` | `null` | no |\n| \u003ca name=\"input_elasticache_subnet_group_tags\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_group\\_tags](#input\\_elasticache\\_subnet\\_group\\_tags) | Additional tags for the elasticache subnet group | `map(string)` | `{}` | no |\n| \u003ca name=\"input_elasticache_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_ipv6\\_prefixes](#input\\_elasticache\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_elasticache_subnet_suffix\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_suffix](#input\\_elasticache\\_subnet\\_suffix) | Suffix to append to elasticache subnets name | `string` | `\"elasticache\"` | no |\n| \u003ca name=\"input_elasticache_subnet_tags\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_tags](#input\\_elasticache\\_subnet\\_tags) | Additional tags for the elasticache subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_elasticache_subnets\"\u003e\u003c/a\u003e [elasticache\\_subnets](#input\\_elasticache\\_subnets) | A list of elasticache subnets | `list(string)` | `[]` | no |\n| \u003ca name=\"input_enable_classiclink\"\u003e\u003c/a\u003e [enable\\_classiclink](#input\\_enable\\_classiclink) | Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic. | `bool` | `null` | no |\n| \u003ca name=\"input_enable_classiclink_dns_support\"\u003e\u003c/a\u003e [enable\\_classiclink\\_dns\\_support](#input\\_enable\\_classiclink\\_dns\\_support) | Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic. | `bool` | `null` | no |\n| \u003ca name=\"input_enable_dhcp_options\"\u003e\u003c/a\u003e [enable\\_dhcp\\_options](#input\\_enable\\_dhcp\\_options) | Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type | `bool` | `false` | no |\n| \u003ca name=\"input_enable_dns_hostnames\"\u003e\u003c/a\u003e [enable\\_dns\\_hostnames](#input\\_enable\\_dns\\_hostnames) | Should be true to enable DNS hostnames in the VPC | `bool` | `false` | no |\n| \u003ca name=\"input_enable_dns_support\"\u003e\u003c/a\u003e [enable\\_dns\\_support](#input\\_enable\\_dns\\_support) | Should be true to enable DNS support in the VPC | `bool` | `true` | no |\n| \u003ca name=\"input_enable_flow_log\"\u003e\u003c/a\u003e [enable\\_flow\\_log](#input\\_enable\\_flow\\_log) | Whether or not to enable VPC Flow Logs | `bool` | `false` | no |\n| \u003ca name=\"input_enable_ipv6\"\u003e\u003c/a\u003e [enable\\_ipv6](#input\\_enable\\_ipv6) | Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. | `bool` | `false` | no |\n| \u003ca name=\"input_enable_nat_gateway\"\u003e\u003c/a\u003e [enable\\_nat\\_gateway](#input\\_enable\\_nat\\_gateway) | Should be true if you want to provision NAT Gateways for each of your private networks | `bool` | `false` | no |\n| \u003ca name=\"input_enable_public_redshift\"\u003e\u003c/a\u003e [enable\\_public\\_redshift](#input\\_enable\\_public\\_redshift) | Controls if redshift should have public routing table | `bool` | `false` | no |\n| \u003ca name=\"input_enable_vpn_gateway\"\u003e\u003c/a\u003e [enable\\_vpn\\_gateway](#input\\_enable\\_vpn\\_gateway) | Should be true if you want to create a new VPN Gateway resource and attach it to the VPC | `bool` | `false` | no |\n| \u003ca name=\"input_external_nat_ip_ids\"\u003e\u003c/a\u003e [external\\_nat\\_ip\\_ids](#input\\_external\\_nat\\_ip\\_ids) | List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse\\_nat\\_ips) | `list(string)` | `[]` | no |\n| \u003ca name=\"input_external_nat_ips\"\u003e\u003c/a\u003e [external\\_nat\\_ips](#input\\_external\\_nat\\_ips) | List of EIPs to be used for `nat_public_ips` output (used in combination with reuse\\_nat\\_ips and external\\_nat\\_ip\\_ids) | `list(string)` | `[]` | no |\n| \u003ca name=\"input_flow_log_cloudwatch_iam_role_arn\"\u003e\u003c/a\u003e [flow\\_log\\_cloudwatch\\_iam\\_role\\_arn](#input\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn) | The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow\\_log\\_destination\\_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided. | `string` | `\"\"` | no |\n| \u003ca name=\"input_flow_log_cloudwatch_log_group_kms_key_id\"\u003e\u003c/a\u003e [flow\\_log\\_cloudwatch\\_log\\_group\\_kms\\_key\\_id](#input\\_flow\\_log\\_cloudwatch\\_log\\_group\\_kms\\_key\\_id) | The ARN of the KMS Key to use when encrypting log data for VPC flow logs. | `string` | `null` | no |\n| \u003ca name=\"input_flow_log_cloudwatch_log_group_name_prefix\"\u003e\u003c/a\u003e [flow\\_log\\_cloudwatch\\_log\\_group\\_name\\_prefix](#input\\_flow\\_log\\_cloudwatch\\_log\\_group\\_name\\_prefix) | Specifies the name prefix of CloudWatch Log Group for VPC flow logs. | `string` | `\"/aws/vpc-flow-log/\"` | no |\n| \u003ca name=\"input_flow_log_cloudwatch_log_group_retention_in_days\"\u003e\u003c/a\u003e [flow\\_log\\_cloudwatch\\_log\\_group\\_retention\\_in\\_days](#input\\_flow\\_log\\_cloudwatch\\_log\\_group\\_retention\\_in\\_days) | Specifies the number of days you want to retain log events in the specified log group for VPC flow logs. | `number` | `null` | no |\n| \u003ca name=\"input_flow_log_destination_arn\"\u003e\u003c/a\u003e [flow\\_log\\_destination\\_arn](#input\\_flow\\_log\\_destination\\_arn) | The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create\\_flow\\_log\\_cloudwatch\\_log\\_group is set to false this argument must be provided. | `string` | `\"\"` | no |\n| \u003ca name=\"input_flow_log_destination_type\"\u003e\u003c/a\u003e [flow\\_log\\_destination\\_type](#input\\_flow\\_log\\_destination\\_type) | Type of flow log destination. Can be s3 or cloud-watch-logs. | `string` | `\"cloud-watch-logs\"` | no |\n| \u003ca name=\"input_flow_log_log_format\"\u003e\u003c/a\u003e [flow\\_log\\_log\\_format](#input\\_flow\\_log\\_log\\_format) | The fields to include in the flow log record, in the order in which they should appear. | `string` | `null` | no |\n| \u003ca name=\"input_flow_log_max_aggregation_interval\"\u003e\u003c/a\u003e [flow\\_log\\_max\\_aggregation\\_interval](#input\\_flow\\_log\\_max\\_aggregation\\_interval) | The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds. | `number` | `600` | no |\n| \u003ca name=\"input_flow_log_traffic_type\"\u003e\u003c/a\u003e [flow\\_log\\_traffic\\_type](#input\\_flow\\_log\\_traffic\\_type) | The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL. | `string` | `\"ALL\"` | no |\n| \u003ca name=\"input_igw_tags\"\u003e\u003c/a\u003e [igw\\_tags](#input\\_igw\\_tags) | Additional tags for the internet gateway | `map(string)` | `{}` | no |\n| \u003ca name=\"input_instance_tenancy\"\u003e\u003c/a\u003e [instance\\_tenancy](#input\\_instance\\_tenancy) | A tenancy option for instances launched into the VPC | `string` | `\"default\"` | no |\n| \u003ca name=\"input_intra_acl_tags\"\u003e\u003c/a\u003e [intra\\_acl\\_tags](#input\\_intra\\_acl\\_tags) | Additional tags for the intra subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_intra_dedicated_network_acl\"\u003e\u003c/a\u003e [intra\\_dedicated\\_network\\_acl](#input\\_intra\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for intra subnets | `bool` | `false` | no |\n| \u003ca name=\"input_intra_inbound_acl_rules\"\u003e\u003c/a\u003e [intra\\_inbound\\_acl\\_rules](#input\\_intra\\_inbound\\_acl\\_rules) | Intra subnets inbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_intra_outbound_acl_rules\"\u003e\u003c/a\u003e [intra\\_outbound\\_acl\\_rules](#input\\_intra\\_outbound\\_acl\\_rules) | Intra subnets outbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_intra_route_table_tags\"\u003e\u003c/a\u003e [intra\\_route\\_table\\_tags](#input\\_intra\\_route\\_table\\_tags) | Additional tags for the intra route tables | `map(string)` | `{}` | no |\n| \u003ca name=\"input_intra_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [intra\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_intra\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_intra_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [intra\\_subnet\\_ipv6\\_prefixes](#input\\_intra\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_intra_subnet_suffix\"\u003e\u003c/a\u003e [intra\\_subnet\\_suffix](#input\\_intra\\_subnet\\_suffix) | Suffix to append to intra subnets name | `string` | `\"intra\"` | no |\n| \u003ca name=\"input_intra_subnet_tags\"\u003e\u003c/a\u003e [intra\\_subnet\\_tags](#input\\_intra\\_subnet\\_tags) | Additional tags for the intra subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_intra_subnets\"\u003e\u003c/a\u003e [intra\\_subnets](#input\\_intra\\_subnets) | A list of intra subnets | `list(string)` | `[]` | no |\n| \u003ca name=\"input_manage_default_network_acl\"\u003e\u003c/a\u003e [manage\\_default\\_network\\_acl](#input\\_manage\\_default\\_network\\_acl) | Should be true to adopt and manage Default Network ACL | `bool` | `false` | no |\n| \u003ca name=\"input_manage_default_route_table\"\u003e\u003c/a\u003e [manage\\_default\\_route\\_table](#input\\_manage\\_default\\_route\\_table) | Should be true to manage default route table | `bool` | `false` | no |\n| \u003ca name=\"input_manage_default_security_group\"\u003e\u003c/a\u003e [manage\\_default\\_security\\_group](#input\\_manage\\_default\\_security\\_group) | Should be true to adopt and manage default security group | `bool` | `false` | no |\n| \u003ca name=\"input_manage_default_vpc\"\u003e\u003c/a\u003e [manage\\_default\\_vpc](#input\\_manage\\_default\\_vpc) | Should be true to adopt and manage Default VPC | `bool` | `false` | no |\n| \u003ca name=\"input_map_public_ip_on_launch\"\u003e\u003c/a\u003e [map\\_public\\_ip\\_on\\_launch](#input\\_map\\_public\\_ip\\_on\\_launch) | Should be false if you do not want to auto-assign public IP on launch | `bool` | `true` | no |\n| \u003ca name=\"input_name\"\u003e\u003c/a\u003e [name](#input\\_name) | Name to be used on all the resources as identifier | `string` | `\"\"` | no |\n| \u003ca name=\"input_nat_eip_tags\"\u003e\u003c/a\u003e [nat\\_eip\\_tags](#input\\_nat\\_eip\\_tags) | Additional tags for the NAT EIP | `map(string)` | `{}` | no |\n| \u003ca name=\"input_nat_gateway_tags\"\u003e\u003c/a\u003e [nat\\_gateway\\_tags](#input\\_nat\\_gateway\\_tags) | Additional tags for the NAT gateways | `map(string)` | `{}` | no |\n| \u003ca name=\"input_one_nat_gateway_per_az\"\u003e\u003c/a\u003e [one\\_nat\\_gateway\\_per\\_az](#input\\_one\\_nat\\_gateway\\_per\\_az) | Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`. | `bool` | `false` | no |\n| \u003ca name=\"input_outpost_acl_tags\"\u003e\u003c/a\u003e [outpost\\_acl\\_tags](#input\\_outpost\\_acl\\_tags) | Additional tags for the outpost subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_outpost_arn\"\u003e\u003c/a\u003e [outpost\\_arn](#input\\_outpost\\_arn) | ARN of Outpost you want to create a subnet in. | `string` | `null` | no |\n| \u003ca name=\"input_outpost_az\"\u003e\u003c/a\u003e [outpost\\_az](#input\\_outpost\\_az) | AZ where Outpost is anchored. | `string` | `null` | no |\n| \u003ca name=\"input_outpost_dedicated_network_acl\"\u003e\u003c/a\u003e [outpost\\_dedicated\\_network\\_acl](#input\\_outpost\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for outpost subnets | `bool` | `false` | no |\n| \u003ca name=\"input_outpost_inbound_acl_rules\"\u003e\u003c/a\u003e [outpost\\_inbound\\_acl\\_rules](#input\\_outpost\\_inbound\\_acl\\_rules) | Outpost subnets inbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_outpost_outbound_acl_rules\"\u003e\u003c/a\u003e [outpost\\_outbound\\_acl\\_rules](#input\\_outpost\\_outbound\\_acl\\_rules) | Outpost subnets outbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_outpost_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [outpost\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_outpost\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_outpost_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [outpost\\_subnet\\_ipv6\\_prefixes](#input\\_outpost\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_outpost_subnet_suffix\"\u003e\u003c/a\u003e [outpost\\_subnet\\_suffix](#input\\_outpost\\_subnet\\_suffix) | Suffix to append to outpost subnets name | `string` | `\"outpost\"` | no |\n| \u003ca name=\"input_outpost_subnet_tags\"\u003e\u003c/a\u003e [outpost\\_subnet\\_tags](#input\\_outpost\\_subnet\\_tags) | Additional tags for the outpost subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_outpost_subnets\"\u003e\u003c/a\u003e [outpost\\_subnets](#input\\_outpost\\_subnets) | A list of outpost subnets inside the VPC | `list(string)` | `[]` | no |\n| \u003ca name=\"input_private_acl_tags\"\u003e\u003c/a\u003e [private\\_acl\\_tags](#input\\_private\\_acl\\_tags) | Additional tags for the private subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_private_dedicated_network_acl\"\u003e\u003c/a\u003e [private\\_dedicated\\_network\\_acl](#input\\_private\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for private subnets | `bool` | `false` | no |\n| \u003ca name=\"input_private_inbound_acl_rules\"\u003e\u003c/a\u003e [private\\_inbound\\_acl\\_rules](#input\\_private\\_inbound\\_acl\\_rules) | Private subnets inbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_private_outbound_acl_rules\"\u003e\u003c/a\u003e [private\\_outbound\\_acl\\_rules](#input\\_private\\_outbound\\_acl\\_rules) | Private subnets outbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_private_route_table_tags\"\u003e\u003c/a\u003e [private\\_route\\_table\\_tags](#input\\_private\\_route\\_table\\_tags) | Additional tags for the private route tables | `map(string)` | `{}` | no |\n| \u003ca name=\"input_private_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [private\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_private\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_private_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [private\\_subnet\\_ipv6\\_prefixes](#input\\_private\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_private_subnet_suffix\"\u003e\u003c/a\u003e [private\\_subnet\\_suffix](#input\\_private\\_subnet\\_suffix) | Suffix to append to private subnets name | `string` | `\"private\"` | no |\n| \u003ca name=\"input_private_subnet_tags\"\u003e\u003c/a\u003e [private\\_subnet\\_tags](#input\\_private\\_subnet\\_tags) | Additional tags for the private subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#input\\_private\\_subnets) | A list of private subnets inside the VPC | `list(string)` | `[]` | no |\n| \u003ca name=\"input_propagate_intra_route_tables_vgw\"\u003e\u003c/a\u003e [propagate\\_intra\\_route\\_tables\\_vgw](#input\\_propagate\\_intra\\_route\\_tables\\_vgw) | Should be true if you want route table propagation | `bool` | `false` | no |\n| \u003ca name=\"input_propagate_private_route_tables_vgw\"\u003e\u003c/a\u003e [propagate\\_private\\_route\\_tables\\_vgw](#input\\_propagate\\_private\\_route\\_tables\\_vgw) | Should be true if you want route table propagation | `bool` | `false` | no |\n| \u003ca name=\"input_propagate_public_route_tables_vgw\"\u003e\u003c/a\u003e [propagate\\_public\\_route\\_tables\\_vgw](#input\\_propagate\\_public\\_route\\_tables\\_vgw) | Should be true if you want route table propagation | `bool` | `false` | no |\n| \u003ca name=\"input_public_acl_tags\"\u003e\u003c/a\u003e [public\\_acl\\_tags](#input\\_public\\_acl\\_tags) | Additional tags for the public subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_public_dedicated_network_acl\"\u003e\u003c/a\u003e [public\\_dedicated\\_network\\_acl](#input\\_public\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for public subnets | `bool` | `false` | no |\n| \u003ca name=\"input_public_inbound_acl_rules\"\u003e\u003c/a\u003e [public\\_inbound\\_acl\\_rules](#input\\_public\\_inbound\\_acl\\_rules) | Public subnets inbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_public_outbound_acl_rules\"\u003e\u003c/a\u003e [public\\_outbound\\_acl\\_rules](#input\\_public\\_outbound\\_acl\\_rules) | Public subnets outbound network ACLs | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_public_route_table_tags\"\u003e\u003c/a\u003e [public\\_route\\_table\\_tags](#input\\_public\\_route\\_table\\_tags) | Additional tags for the public route tables | `map(string)` | `{}` | no |\n| \u003ca name=\"input_public_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [public\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_public\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_public_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [public\\_subnet\\_ipv6\\_prefixes](#input\\_public\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_public_subnet_suffix\"\u003e\u003c/a\u003e [public\\_subnet\\_suffix](#input\\_public\\_subnet\\_suffix) | Suffix to append to public subnets name | `string` | `\"public\"` | no |\n| \u003ca name=\"input_public_subnet_tags\"\u003e\u003c/a\u003e [public\\_subnet\\_tags](#input\\_public\\_subnet\\_tags) | Additional tags for the public subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#input\\_public\\_subnets) | A list of public subnets inside the VPC | `list(string)` | `[]` | no |\n| \u003ca name=\"input_redshift_acl_tags\"\u003e\u003c/a\u003e [redshift\\_acl\\_tags](#input\\_redshift\\_acl\\_tags) | Additional tags for the redshift subnets network ACL | `map(string)` | `{}` | no |\n| \u003ca name=\"input_redshift_dedicated_network_acl\"\u003e\u003c/a\u003e [redshift\\_dedicated\\_network\\_acl](#input\\_redshift\\_dedicated\\_network\\_acl) | Whether to use dedicated network ACL (not default) and custom rules for redshift subnets | `bool` | `false` | no |\n| \u003ca name=\"input_redshift_inbound_acl_rules\"\u003e\u003c/a\u003e [redshift\\_inbound\\_acl\\_rules](#input\\_redshift\\_inbound\\_acl\\_rules) | Redshift subnets inbound network ACL rules | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_redshift_outbound_acl_rules\"\u003e\u003c/a\u003e [redshift\\_outbound\\_acl\\_rules](#input\\_redshift\\_outbound\\_acl\\_rules) | Redshift subnets outbound network ACL rules | `list(map(string))` | \u003cpre\u003e[\u003cbr\u003e  {\u003cbr\u003e    \"cidr_block\": \"0.0.0.0/0\",\u003cbr\u003e    \"from_port\": 0,\u003cbr\u003e    \"protocol\": \"-1\",\u003cbr\u003e    \"rule_action\": \"allow\",\u003cbr\u003e    \"rule_number\": 100,\u003cbr\u003e    \"to_port\": 0\u003cbr\u003e  }\u003cbr\u003e]\u003c/pre\u003e | no |\n| \u003ca name=\"input_redshift_route_table_tags\"\u003e\u003c/a\u003e [redshift\\_route\\_table\\_tags](#input\\_redshift\\_route\\_table\\_tags) | Additional tags for the redshift route tables | `map(string)` | `{}` | no |\n| \u003ca name=\"input_redshift_subnet_assign_ipv6_address_on_creation\"\u003e\u003c/a\u003e [redshift\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation](#input\\_redshift\\_subnet\\_assign\\_ipv6\\_address\\_on\\_creation) | Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map\\_public\\_ip\\_on\\_launch | `bool` | `null` | no |\n| \u003ca name=\"input_redshift_subnet_group_name\"\u003e\u003c/a\u003e [redshift\\_subnet\\_group\\_name](#input\\_redshift\\_subnet\\_group\\_name) | Name of redshift subnet group | `string` | `null` | no |\n| \u003ca name=\"input_redshift_subnet_group_tags\"\u003e\u003c/a\u003e [redshift\\_subnet\\_group\\_tags](#input\\_redshift\\_subnet\\_group\\_tags) | Additional tags for the redshift subnet group | `map(string)` | `{}` | no |\n| \u003ca name=\"input_redshift_subnet_ipv6_prefixes\"\u003e\u003c/a\u003e [redshift\\_subnet\\_ipv6\\_prefixes](#input\\_redshift\\_subnet\\_ipv6\\_prefixes) | Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list | `list(string)` | `[]` | no |\n| \u003ca name=\"input_redshift_subnet_suffix\"\u003e\u003c/a\u003e [redshift\\_subnet\\_suffix](#input\\_redshift\\_subnet\\_suffix) | Suffix to append to redshift subnets name | `string` | `\"redshift\"` | no |\n| \u003ca name=\"input_redshift_subnet_tags\"\u003e\u003c/a\u003e [redshift\\_subnet\\_tags](#input\\_redshift\\_subnet\\_tags) | Additional tags for the redshift subnets | `map(string)` | `{}` | no |\n| \u003ca name=\"input_redshift_subnets\"\u003e\u003c/a\u003e [redshift\\_subnets](#input\\_redshift\\_subnets) | A list of redshift subnets | `list(string)` | `[]` | no |\n| \u003ca name=\"input_reuse_nat_ips\"\u003e\u003c/a\u003e [reuse\\_nat\\_ips](#input\\_reuse\\_nat\\_ips) | Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external\\_nat\\_ip\\_ids' variable | `bool` | `false` | no |\n| \u003ca name=\"input_secondary_cidr_blocks\"\u003e\u003c/a\u003e [secondary\\_cidr\\_blocks](#input\\_secondary\\_cidr\\_blocks) | List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool | `list(string)` | `[]` | no |\n| \u003ca name=\"input_single_nat_gateway\"\u003e\u003c/a\u003e [single\\_nat\\_gateway](#input\\_single\\_nat\\_gateway) | Should be true if you want to provision a single shared NAT Gateway across all of your private networks | `bool` | `false` | no |\n| \u003ca name=\"input_tags\"\u003e\u003c/a\u003e [tags](#input\\_tags) | A map of tags to add to all resources | `map(string)` | `{}` | no |\n| \u003ca name=\"input_vpc_flow_log_permissions_boundary\"\u003e\u003c/a\u003e [vpc\\_flow\\_log\\_permissions\\_boundary](#input\\_vpc\\_flow\\_log\\_permissions\\_boundary) | The ARN of the Permissions Boundary for the VPC Flow Log IAM Role | `string` | `null` | no |\n| \u003ca name=\"input_vpc_flow_log_tags\"\u003e\u003c/a\u003e [vpc\\_flow\\_log\\_tags](#input\\_vpc\\_flow\\_log\\_tags) | Additional tags for the VPC Flow Logs | `map(string)` | `{}` | no |\n| \u003ca name=\"input_vpc_tags\"\u003e\u003c/a\u003e [vpc\\_tags](#input\\_vpc\\_tags) | Additional tags for the VPC | `map(string)` | `{}` | no |\n| \u003ca name=\"input_vpn_gateway_az\"\u003e\u003c/a\u003e [vpn\\_gateway\\_az](#input\\_vpn\\_gateway\\_az) | The Availability Zone for the VPN Gateway | `string` | `null` | no |\n| \u003ca name=\"input_vpn_gateway_id\"\u003e\u003c/a\u003e [vpn\\_gateway\\_id](#input\\_vpn\\_gateway\\_id) | ID of VPN Gateway to attach to the VPC | `string` | `\"\"` | no |\n| \u003ca name=\"input_vpn_gateway_tags\"\u003e\u003c/a\u003e [vpn\\_gateway\\_tags](#input\\_vpn\\_gateway\\_tags) | Additional tags for the VPN gateway | `map(string)` | `{}` | no |\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_azs\"\u003e\u003c/a\u003e [azs](#output\\_azs) | A list of availability zones specified as argument to this module |\n| \u003ca name=\"output_cgw_arns\"\u003e\u003c/a\u003e [cgw\\_arns](#output\\_cgw\\_arns) | List of ARNs of Customer Gateway |\n| \u003ca name=\"output_cgw_ids\"\u003e\u003c/a\u003e [cgw\\_ids](#output\\_cgw\\_ids) | List of IDs of Customer Gateway |\n| \u003ca name=\"output_database_internet_gateway_route_id\"\u003e\u003c/a\u003e [database\\_internet\\_gateway\\_route\\_id](#output\\_database\\_internet\\_gateway\\_route\\_id) | ID of the database internet gateway route. |\n| \u003ca name=\"output_database_ipv6_egress_route_id\"\u003e\u003c/a\u003e [database\\_ipv6\\_egress\\_route\\_id](#output\\_database\\_ipv6\\_egress\\_route\\_id) | ID of the database IPv6 egress route. |\n| \u003ca name=\"output_database_nat_gateway_route_ids\"\u003e\u003c/a\u003e [database\\_nat\\_gateway\\_route\\_ids](#output\\_database\\_nat\\_gateway\\_route\\_ids) | List of IDs of the database nat gateway route. |\n| \u003ca name=\"output_database_network_acl_arn\"\u003e\u003c/a\u003e [database\\_network\\_acl\\_arn](#output\\_database\\_network\\_acl\\_arn) | ARN of the database network ACL |\n| \u003ca name=\"output_database_network_acl_id\"\u003e\u003c/a\u003e [database\\_network\\_acl\\_id](#output\\_database\\_network\\_acl\\_id) | ID of the database network ACL |\n| \u003ca name=\"output_database_route_table_association_ids\"\u003e\u003c/a\u003e [database\\_route\\_table\\_association\\_ids](#output\\_database\\_route\\_table\\_association\\_ids) | List of IDs of the database route table association |\n| \u003ca name=\"output_database_route_table_ids\"\u003e\u003c/a\u003e [database\\_route\\_table\\_ids](#output\\_database\\_route\\_table\\_ids) | List of IDs of database route tables |\n| \u003ca name=\"output_database_subnet_arns\"\u003e\u003c/a\u003e [database\\_subnet\\_arns](#output\\_database\\_subnet\\_arns) | List of ARNs of database subnets |\n| \u003ca name=\"output_database_subnet_group\"\u003e\u003c/a\u003e [database\\_subnet\\_group](#output\\_database\\_subnet\\_group) | ID of database subnet group |\n| \u003ca name=\"output_database_subnet_group_name\"\u003e\u003c/a\u003e [database\\_subnet\\_group\\_name](#output\\_database\\_subnet\\_group\\_name) | Name of database subnet group |\n| \u003ca name=\"output_database_subnets\"\u003e\u003c/a\u003e [database\\_subnets](#output\\_database\\_subnets) | List of IDs of database subnets |\n| \u003ca name=\"output_database_subnets_cidr_blocks\"\u003e\u003c/a\u003e [database\\_subnets\\_cidr\\_blocks](#output\\_database\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of database subnets |\n| \u003ca name=\"output_database_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [database\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_database\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of database subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_default_network_acl_id\"\u003e\u003c/a\u003e [default\\_network\\_acl\\_id](#output\\_default\\_network\\_acl\\_id) | The ID of the default network ACL |\n| \u003ca name=\"output_default_route_table_id\"\u003e\u003c/a\u003e [default\\_route\\_table\\_id](#output\\_default\\_route\\_table\\_id) | The ID of the default route table |\n| \u003ca name=\"output_default_security_group_id\"\u003e\u003c/a\u003e [default\\_security\\_group\\_id](#output\\_default\\_security\\_group\\_id) | The ID of the security group created by default on VPC creation |\n| \u003ca name=\"output_default_vpc_arn\"\u003e\u003c/a\u003e [default\\_vpc\\_arn](#output\\_default\\_vpc\\_arn) | The ARN of the Default VPC |\n| \u003ca name=\"output_default_vpc_cidr_block\"\u003e\u003c/a\u003e [default\\_vpc\\_cidr\\_block](#output\\_default\\_vpc\\_cidr\\_block) | The CIDR block of the Default VPC |\n| \u003ca name=\"output_default_vpc_default_network_acl_id\"\u003e\u003c/a\u003e [default\\_vpc\\_default\\_network\\_acl\\_id](#output\\_default\\_vpc\\_default\\_network\\_acl\\_id) | The ID of the default network ACL of the Default VPC |\n| \u003ca name=\"output_default_vpc_default_route_table_id\"\u003e\u003c/a\u003e [default\\_vpc\\_default\\_route\\_table\\_id](#output\\_default\\_vpc\\_default\\_route\\_table\\_id) | The ID of the default route table of the Default VPC |\n| \u003ca name=\"output_default_vpc_default_security_group_id\"\u003e\u003c/a\u003e [default\\_vpc\\_default\\_security\\_group\\_id](#output\\_default\\_vpc\\_default\\_security\\_group\\_id) | The ID of the security group created by default on Default VPC creation |\n| \u003ca name=\"output_default_vpc_enable_dns_hostnames\"\u003e\u003c/a\u003e [default\\_vpc\\_enable\\_dns\\_hostnames](#output\\_default\\_vpc\\_enable\\_dns\\_hostnames) | Whether or not the Default VPC has DNS hostname support |\n| \u003ca name=\"output_default_vpc_enable_dns_support\"\u003e\u003c/a\u003e [default\\_vpc\\_enable\\_dns\\_support](#output\\_default\\_vpc\\_enable\\_dns\\_support) | Whether or not the Default VPC has DNS support |\n| \u003ca name=\"output_default_vpc_id\"\u003e\u003c/a\u003e [default\\_vpc\\_id](#output\\_default\\_vpc\\_id) | The ID of the Default VPC |\n| \u003ca name=\"output_default_vpc_instance_tenancy\"\u003e\u003c/a\u003e [default\\_vpc\\_instance\\_tenancy](#output\\_default\\_vpc\\_instance\\_tenancy) | Tenancy of instances spin up within Default VPC |\n| \u003ca name=\"output_default_vpc_main_route_table_id\"\u003e\u003c/a\u003e [default\\_vpc\\_main\\_route\\_table\\_id](#output\\_default\\_vpc\\_main\\_route\\_table\\_id) | The ID of the main route table associated with the Default VPC |\n| \u003ca name=\"output_dhcp_options_id\"\u003e\u003c/a\u003e [dhcp\\_options\\_id](#output\\_dhcp\\_options\\_id) | The ID of the DHCP options |\n| \u003ca name=\"output_egress_only_internet_gateway_id\"\u003e\u003c/a\u003e [egress\\_only\\_internet\\_gateway\\_id](#output\\_egress\\_only\\_internet\\_gateway\\_id) | The ID of the egress only Internet Gateway |\n| \u003ca name=\"output_elasticache_network_acl_arn\"\u003e\u003c/a\u003e [elasticache\\_network\\_acl\\_arn](#output\\_elasticache\\_network\\_acl\\_arn) | ARN of the elasticache network ACL |\n| \u003ca name=\"output_elasticache_network_acl_id\"\u003e\u003c/a\u003e [elasticache\\_network\\_acl\\_id](#output\\_elasticache\\_network\\_acl\\_id) | ID of the elasticache network ACL |\n| \u003ca name=\"output_elasticache_route_table_association_ids\"\u003e\u003c/a\u003e [elasticache\\_route\\_table\\_association\\_ids](#output\\_elasticache\\_route\\_table\\_association\\_ids) | List of IDs of the elasticache route table association |\n| \u003ca name=\"output_elasticache_route_table_ids\"\u003e\u003c/a\u003e [elasticache\\_route\\_table\\_ids](#output\\_elasticache\\_route\\_table\\_ids) | List of IDs of elasticache route tables |\n| \u003ca name=\"output_elasticache_subnet_arns\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_arns](#output\\_elasticache\\_subnet\\_arns) | List of ARNs of elasticache subnets |\n| \u003ca name=\"output_elasticache_subnet_group\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_group](#output\\_elasticache\\_subnet\\_group) | ID of elasticache subnet group |\n| \u003ca name=\"output_elasticache_subnet_group_name\"\u003e\u003c/a\u003e [elasticache\\_subnet\\_group\\_name](#output\\_elasticache\\_subnet\\_group\\_name) | Name of elasticache subnet group |\n| \u003ca name=\"output_elasticache_subnets\"\u003e\u003c/a\u003e [elasticache\\_subnets](#output\\_elasticache\\_subnets) | List of IDs of elasticache subnets |\n| \u003ca name=\"output_elasticache_subnets_cidr_blocks\"\u003e\u003c/a\u003e [elasticache\\_subnets\\_cidr\\_blocks](#output\\_elasticache\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of elasticache subnets |\n| \u003ca name=\"output_elasticache_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [elasticache\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_elasticache\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of elasticache subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_igw_arn\"\u003e\u003c/a\u003e [igw\\_arn](#output\\_igw\\_arn) | The ARN of the Internet Gateway |\n| \u003ca name=\"output_igw_id\"\u003e\u003c/a\u003e [igw\\_id](#output\\_igw\\_id) | The ID of the Internet Gateway |\n| \u003ca name=\"output_intra_network_acl_arn\"\u003e\u003c/a\u003e [intra\\_network\\_acl\\_arn](#output\\_intra\\_network\\_acl\\_arn) | ARN of the intra network ACL |\n| \u003ca name=\"output_intra_network_acl_id\"\u003e\u003c/a\u003e [intra\\_network\\_acl\\_id](#output\\_intra\\_network\\_acl\\_id) | ID of the intra network ACL |\n| \u003ca name=\"output_intra_route_table_association_ids\"\u003e\u003c/a\u003e [intra\\_route\\_table\\_association\\_ids](#output\\_intra\\_route\\_table\\_association\\_ids) | List of IDs of the intra route table association |\n| \u003ca name=\"output_intra_route_table_ids\"\u003e\u003c/a\u003e [intra\\_route\\_table\\_ids](#output\\_intra\\_route\\_table\\_ids) | List of IDs of intra route tables |\n| \u003ca name=\"output_intra_subnet_arns\"\u003e\u003c/a\u003e [intra\\_subnet\\_arns](#output\\_intra\\_subnet\\_arns) | List of ARNs of intra subnets |\n| \u003ca name=\"output_intra_subnets\"\u003e\u003c/a\u003e [intra\\_subnets](#output\\_intra\\_subnets) | List of IDs of intra subnets |\n| \u003ca name=\"output_intra_subnets_cidr_blocks\"\u003e\u003c/a\u003e [intra\\_subnets\\_cidr\\_blocks](#output\\_intra\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of intra subnets |\n| \u003ca name=\"output_intra_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [intra\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_intra\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of intra subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_name\"\u003e\u003c/a\u003e [name](#output\\_name) | The name of the VPC specified as argument to this module |\n| \u003ca name=\"output_nat_ids\"\u003e\u003c/a\u003e [nat\\_ids](#output\\_nat\\_ids) | List of allocation ID of Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_natgw_ids\"\u003e\u003c/a\u003e [natgw\\_ids](#output\\_natgw\\_ids) | List of NAT Gateway IDs |\n| \u003ca name=\"output_outpost_network_acl_arn\"\u003e\u003c/a\u003e [outpost\\_network\\_acl\\_arn](#output\\_outpost\\_network\\_acl\\_arn) | ARN of the outpost network ACL |\n| \u003ca name=\"output_outpost_network_acl_id\"\u003e\u003c/a\u003e [outpost\\_network\\_acl\\_id](#output\\_outpost\\_network\\_acl\\_id) | ID of the outpost network ACL |\n| \u003ca name=\"output_outpost_subnet_arns\"\u003e\u003c/a\u003e [outpost\\_subnet\\_arns](#output\\_outpost\\_subnet\\_arns) | List of ARNs of outpost subnets |\n| \u003ca name=\"output_outpost_subnets\"\u003e\u003c/a\u003e [outpost\\_subnets](#output\\_outpost\\_subnets) | List of IDs of outpost subnets |\n| \u003ca name=\"output_outpost_subnets_cidr_blocks\"\u003e\u003c/a\u003e [outpost\\_subnets\\_cidr\\_blocks](#output\\_outpost\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of outpost subnets |\n| \u003ca name=\"output_outpost_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [outpost\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_outpost\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of outpost subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_private_ipv6_egress_route_ids\"\u003e\u003c/a\u003e [private\\_ipv6\\_egress\\_route\\_ids](#output\\_private\\_ipv6\\_egress\\_route\\_ids) | List of IDs of the ipv6 egress route. |\n| \u003ca name=\"output_private_nat_gateway_route_ids\"\u003e\u003c/a\u003e [private\\_nat\\_gateway\\_route\\_ids](#output\\_private\\_nat\\_gateway\\_route\\_ids) | List of IDs of the private nat gateway route. |\n| \u003ca name=\"output_private_network_acl_arn\"\u003e\u003c/a\u003e [private\\_network\\_acl\\_arn](#output\\_private\\_network\\_acl\\_arn) | ARN of the private network ACL |\n| \u003ca name=\"output_private_network_acl_id\"\u003e\u003c/a\u003e [private\\_network\\_acl\\_id](#output\\_private\\_network\\_acl\\_id) | ID of the private network ACL |\n| \u003ca name=\"output_private_route_table_association_ids\"\u003e\u003c/a\u003e [private\\_route\\_table\\_association\\_ids](#output\\_private\\_route\\_table\\_association\\_ids) | List of IDs of the private route table association |\n| \u003ca name=\"output_private_route_table_ids\"\u003e\u003c/a\u003e [private\\_route\\_table\\_ids](#output\\_private\\_route\\_table\\_ids) | List of IDs of private route tables |\n| \u003ca name=\"output_private_subnet_arns\"\u003e\u003c/a\u003e [private\\_subnet\\_arns](#output\\_private\\_subnet\\_arns) | List of ARNs of private subnets |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_private_subnets_cidr_blocks\"\u003e\u003c/a\u003e [private\\_subnets\\_cidr\\_blocks](#output\\_private\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of private subnets |\n| \u003ca name=\"output_private_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [private\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_private\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of private subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_public_internet_gateway_ipv6_route_id\"\u003e\u003c/a\u003e [public\\_internet\\_gateway\\_ipv6\\_route\\_id](#output\\_public\\_internet\\_gateway\\_ipv6\\_route\\_id) | ID of the IPv6 internet gateway route. |\n| \u003ca name=\"output_public_internet_gateway_route_id\"\u003e\u003c/a\u003e [public\\_internet\\_gateway\\_route\\_id](#output\\_public\\_internet\\_gateway\\_route\\_id) | ID of the internet gateway route. |\n| \u003ca name=\"output_public_network_acl_arn\"\u003e\u003c/a\u003e [public\\_network\\_acl\\_arn](#output\\_public\\_network\\_acl\\_arn) | ARN of the public network ACL |\n| \u003ca name=\"output_public_network_acl_id\"\u003e\u003c/a\u003e [public\\_network\\_acl\\_id](#output\\_public\\_network\\_acl\\_id) | ID of the public network ACL |\n| \u003ca name=\"output_public_route_table_association_ids\"\u003e\u003c/a\u003e [public\\_route\\_table\\_association\\_ids](#output\\_public\\_route\\_table\\_association\\_ids) | List of IDs of the public route table association |\n| \u003ca name=\"output_public_route_table_ids\"\u003e\u003c/a\u003e [public\\_route\\_table\\_ids](#output\\_public\\_route\\_table\\_ids) | List of IDs of public route tables |\n| \u003ca name=\"output_public_subnet_arns\"\u003e\u003c/a\u003e [public\\_subnet\\_arns](#output\\_public\\_subnet\\_arns) | List of ARNs of public subnets |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_public_subnets_cidr_blocks\"\u003e\u003c/a\u003e [public\\_subnets\\_cidr\\_blocks](#output\\_public\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of public subnets |\n| \u003ca name=\"output_public_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [public\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_public\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of public subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_redshift_network_acl_arn\"\u003e\u003c/a\u003e [redshift\\_network\\_acl\\_arn](#output\\_redshift\\_network\\_acl\\_arn) | ARN of the redshift network ACL |\n| \u003ca name=\"output_redshift_network_acl_id\"\u003e\u003c/a\u003e [redshift\\_network\\_acl\\_id](#output\\_redshift\\_network\\_acl\\_id) | ID of the redshift network ACL |\n| \u003ca name=\"output_redshift_public_route_table_association_ids\"\u003e\u003c/a\u003e [redshift\\_public\\_route\\_table\\_association\\_ids](#output\\_redshift\\_public\\_route\\_table\\_association\\_ids) | List of IDs of the public redshidt route table association |\n| \u003ca name=\"output_redshift_route_table_association_ids\"\u003e\u003c/a\u003e [redshift\\_route\\_table\\_association\\_ids](#output\\_redshift\\_route\\_table\\_association\\_ids) | List of IDs of the redshift route table association |\n| \u003ca name=\"output_redshift_route_table_ids\"\u003e\u003c/a\u003e [redshift\\_route\\_table\\_ids](#output\\_redshift\\_route\\_table\\_ids) | List of IDs of redshift route tables |\n| \u003ca name=\"output_redshift_subnet_arns\"\u003e\u003c/a\u003e [redshift\\_subnet\\_arns](#output\\_redshift\\_subnet\\_arns) | List of ARNs of redshift subnets |\n| \u003ca name=\"output_redshift_subnet_group\"\u003e\u003c/a\u003e [redshift\\_subnet\\_group](#output\\_redshift\\_subnet\\_group) | ID of redshift subnet group |\n| \u003ca name=\"output_redshift_subnets\"\u003e\u003c/a\u003e [redshift\\_subnets](#output\\_redshift\\_subnets) | List of IDs of redshift subnets |\n| \u003ca name=\"output_redshift_subnets_cidr_blocks\"\u003e\u003c/a\u003e [redshift\\_subnets\\_cidr\\_blocks](#output\\_redshift\\_subnets\\_cidr\\_blocks) | List of cidr\\_blocks of redshift subnets |\n| \u003ca name=\"output_redshift_subnets_ipv6_cidr_blocks\"\u003e\u003c/a\u003e [redshift\\_subnets\\_ipv6\\_cidr\\_blocks](#output\\_redshift\\_subnets\\_ipv6\\_cidr\\_blocks) | List of IPv6 cidr\\_blocks of redshift subnets in an IPv6 enabled VPC |\n| \u003ca name=\"output_this_customer_gateway\"\u003e\u003c/a\u003e [this\\_customer\\_gateway](#output\\_this\\_customer\\_gateway) | Map of Customer Gateway attributes |\n| \u003ca name=\"output_vgw_arn\"\u003e\u003c/a\u003e [vgw\\_arn](#output\\_vgw\\_arn) | The ARN of the VPN Gateway |\n| \u003ca name=\"output_vgw_id\"\u003e\u003c/a\u003e [vgw\\_id](#output\\_vgw\\_id) | The ID of the VPN Gateway |\n| \u003ca name=\"output_vpc_arn\"\u003e\u003c/a\u003e [vpc\\_arn](#output\\_vpc\\_arn) | The ARN of the VPC |\n| \u003ca name=\"output_vpc_cidr_block\"\u003e\u003c/a\u003e [vpc\\_cidr\\_block](#output\\_vpc\\_cidr\\_block) | The CIDR block of the VPC |\n| \u003ca name=\"output_vpc_enable_dns_hostnames\"\u003e\u003c/a\u003e [vpc\\_enable\\_dns\\_hostnames](#output\\_vpc\\_enable\\_dns\\_hostnames) | Whether or not the VPC has DNS hostname support |\n| \u003ca name=\"output_vpc_enable_dns_support\"\u003e\u003c/a\u003e [vpc\\_enable\\_dns\\_support](#output\\_vpc\\_enable\\_dns\\_support) | Whether or not the VPC has DNS support |\n| \u003ca name=\"output_vpc_flow_log_cloudwatch_iam_role_arn\"\u003e\u003c/a\u003e [vpc\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn](#output\\_vpc\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn) | The ARN of the IAM role used when pushing logs to Cloudwatch log group |\n| \u003ca name=\"output_vpc_flow_log_destination_arn\"\u003e\u003c/a\u003e [vpc\\_flow\\_log\\_destination\\_arn](#output\\_vpc\\_flow\\_log\\_destination\\_arn) | The ARN of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_flow_log_destination_type\"\u003e\u003c/a\u003e [vpc\\_flow\\_log\\_destination\\_type](#output\\_vpc\\_flow\\_log\\_destination\\_type) | The type of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_flow_log_id\"\u003e\u003c/a\u003e [vpc\\_flow\\_log\\_id](#output\\_vpc\\_flow\\_log\\_id) | The ID of the Flow Log resource |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n| \u003ca name=\"output_vpc_instance_tenancy\"\u003e\u003c/a\u003e [vpc\\_instance\\_tenancy](#output\\_vpc\\_instance\\_tenancy) | Tenancy of instances spin up within VPC |\n| \u003ca name=\"output_vpc_ipv6_association_id\"\u003e\u003c/a\u003e [vpc\\_ipv6\\_association\\_id](#output\\_vpc\\_ipv6\\_association\\_id) | The association ID for the IPv6 CIDR block |\n| \u003ca name=\"output_vpc_ipv6_cidr_block\"\u003e\u003c/a\u003e [vpc\\_ipv6\\_cidr\\_block](#output\\_vpc\\_ipv6\\_cidr\\_block) | The IPv6 CIDR block |\n| \u003ca name=\"output_vpc_main_route_table_id\"\u003e\u003c/a\u003e [vpc\\_main\\_route\\_table\\_id](#output\\_vpc\\_main\\_route\\_table\\_id) | The ID of the main route table associated with this VPC |\n| \u003ca name=\"output_vpc_owner_id\"\u003e\u003c/a\u003e [vpc\\_owner\\_id](#output\\_vpc\\_owner\\_id) | The ID of the AWS account that owns the VPC |\n| \u003ca name=\"output_vpc_secondary_cidr_blocks\"\u003e\u003c/a\u003e [vpc\\_secondary\\_cidr\\_blocks](#output\\_vpc\\_secondary\\_cidr\\_blocks) | List of secondary CIDR blocks of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n\n## Authors\n\nModule is maintained by [Anton Babenko](https://github.com/antonbabenko) with help from [these awesome contributors](https://github.com/terraform-aws-modules/terraform-aws-vpc/graphs/contributors).\n\n## License\n\nApache 2 Licensed. See [LICENSE](https://github.com/terraform-aws-modules/terraform-aws-vpc/tree/master/LICENSE) for full details.\n",
        "empty": false,
        "inputs": [
            {
                "name": "outpost_arn",
                "type": "string",
                "description": "ARN of Outpost you want to create a subnet in.",
                "default": "",
                "required": true
            },
            {
                "name": "intra_subnets",
                "type": "list(string)",
                "description": "A list of intra subnets",
                "default": "[]",
                "required": false
            },
            {
                "name": "create_database_nat_gateway_route",
                "type": "bool",
                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "enable_dns_hostnames",
                "type": "bool",
                "description": "Should be true to enable DNS hostnames in the VPC",
                "default": "false",
                "required": false
            },
            {
                "name": "create_elasticache_subnet_route_table",
                "type": "bool",
                "description": "Controls if separate route table for elasticache should be created",
                "default": "false",
                "required": false
            },
            {
                "name": "reuse_nat_ips",
                "type": "bool",
                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
                "default": "false",
                "required": false
            },
            {
                "name": "tags",
                "type": "map(string)",
                "description": "A map of tags to add to all resources",
                "default": "{}",
                "required": false
            },
            {
                "name": "public_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "elasticache_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "instance_tenancy",
                "type": "string",
                "description": "A tenancy option for instances launched into the VPC",
                "default": "\"default\"",
                "required": false
            },
            {
                "name": "redshift_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to redshift subnets name",
                "default": "\"redshift\"",
                "required": false
            },
            {
                "name": "database_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the database route tables",
                "default": "{}",
                "required": false
            },
            {
                "name": "database_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the database subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "flow_log_traffic_type",
                "type": "string",
                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.",
                "default": "\"ALL\"",
                "required": false
            },
            {
                "name": "enable_ipv6",
                "type": "bool",
                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
                "default": "false",
                "required": false
            },
            {
                "name": "outpost_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "private_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the private subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "default_vpc_tags",
                "type": "map(string)",
                "description": "Additional tags for the Default VPC",
                "default": "{}",
                "required": false
            },
            {
                "name": "intra_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Intra subnets inbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "public_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "redshift_subnet_group_name",
                "type": "string",
                "description": "Name of redshift subnet group",
                "default": "",
                "required": true
            },
            {
                "name": "nat_gateway_tags",
                "type": "map(string)",
                "description": "Additional tags for the NAT gateways",
                "default": "{}",
                "required": false
            },
            {
                "name": "propagate_public_route_tables_vgw",
                "type": "bool",
                "description": "Should be true if you want route table propagation",
                "default": "false",
                "required": false
            },
            {
                "name": "outpost_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Outpost subnets outbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "elasticache_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the elasticache route tables",
                "default": "{}",
                "required": false
            },
            {
                "name": "outpost_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the outpost subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "default_security_group_name",
                "type": "string",
                "description": "Name to be used on the default security group",
                "default": "\"default\"",
                "required": false
            },
            {
                "name": "default_security_group_ingress",
                "type": "list(map(string))",
                "description": "List of maps of ingress rules to set on the default security group",
                "default": "",
                "required": true
            },
            {
                "name": "private_subnets",
                "type": "list(string)",
                "description": "A list of private subnets inside the VPC",
                "default": "[]",
                "required": false
            },
            {
                "name": "public_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the public route tables",
                "default": "{}",
                "required": false
            },
            {
                "name": "outpost_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Outpost subnets inbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "customer_gateway_tags",
                "type": "map(string)",
                "description": "Additional tags for the Customer Gateway",
                "default": "{}",
                "required": false
            },
            {
                "name": "default_network_acl_name",
                "type": "string",
                "description": "Name to be used on the Default Network ACL",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "public_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Public subnets inbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "private_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "create_elasticache_subnet_group",
                "type": "bool",
                "description": "Controls if elasticache subnet group should be created",
                "default": "true",
                "required": false
            },
            {
                "name": "default_route_table_propagating_vgws",
                "type": "list(string)",
                "description": "List of virtual gateways for propagation",
                "default": "[]",
                "required": false
            },
            {
                "name": "external_nat_ip_ids",
                "type": "list(string)",
                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
                "default": "[]",
                "required": false
            },
            {
                "name": "manage_default_route_table",
                "type": "bool",
                "description": "Should be true to manage default route table",
                "default": "false",
                "required": false
            },
            {
                "name": "igw_tags",
                "type": "map(string)",
                "description": "Additional tags for the internet gateway",
                "default": "{}",
                "required": false
            },
            {
                "name": "outpost_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the outpost subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "redshift_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Redshift subnets outbound network ACL rules",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "database_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "database_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "elasticache_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to elasticache subnets name",
                "default": "\"elasticache\"",
                "required": false
            },
            {
                "name": "flow_log_destination_type",
                "type": "string",
                "description": "Type of flow log destination. Can be s3 or cloud-watch-logs.",
                "default": "\"cloud-watch-logs\"",
                "required": false
            },
            {
                "name": "vpn_gateway_az",
                "type": "string",
                "description": "The Availability Zone for the VPN Gateway",
                "default": "",
                "required": true
            },
            {
                "name": "public_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the public subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "dhcp_options_tags",
                "type": "map(string)",
                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
                "default": "{}",
                "required": false
            },
            {
                "name": "nat_eip_tags",
                "type": "map(string)",
                "description": "Additional tags for the NAT EIP",
                "default": "{}",
                "required": false
            },
            {
                "name": "flow_log_destination_arn",
                "type": "string",
                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "flow_log_cloudwatch_log_group_kms_key_id",
                "type": "string",
                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs.",
                "default": "",
                "required": true
            },
            {
                "name": "intra_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the intra route tables",
                "default": "{}",
                "required": false
            },
            {
                "name": "database_subnet_group_name",
                "type": "string",
                "description": "Name of database subnet group",
                "default": "",
                "required": true
            },
            {
                "name": "public_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the public subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "redshift_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Redshift subnets inbound network ACL rules",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "create_egress_only_igw",
                "type": "bool",
                "description": "Controls if an Egress Only Internet Gateway is created and its related routes.",
                "default": "true",
                "required": false
            },
            {
                "name": "create_vpc",
                "type": "bool",
                "description": "Controls if VPC should be created (it affects almost all resources)",
                "default": "true",
                "required": false
            },
            {
                "name": "manage_default_network_acl",
                "type": "bool",
                "description": "Should be true to adopt and manage Default Network ACL",
                "default": "false",
                "required": false
            },
            {
                "name": "private_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Private subnets outbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "customer_gateways",
                "type": "map(map(any))",
                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
                "default": "{}",
                "required": false
            },
            {
                "name": "enable_dhcp_options",
                "type": "bool",
                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
                "default": "false",
                "required": false
            },
            {
                "name": "cidr",
                "type": "string",
                "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden",
                "default": "\"0.0.0.0/0\"",
                "required": false
            },
            {
                "name": "private_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "create_database_subnet_route_table",
                "type": "bool",
                "description": "Controls if separate route table for database should be created",
                "default": "false",
                "required": false
            },
            {
                "name": "dhcp_options_domain_name",
                "type": "string",
                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "elasticache_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Elasticache subnets inbound network ACL rules",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "outpost_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to outpost subnets name",
                "default": "\"outpost\"",
                "required": false
            },
            {
                "name": "redshift_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the redshift subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "intra_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the intra subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "map_public_ip_on_launch",
                "type": "bool",
                "description": "Should be false if you do not want to auto-assign public IP on launch",
                "default": "true",
                "required": false
            },
            {
                "name": "secondary_cidr_blocks",
                "type": "list(string)",
                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
                "default": "[]",
                "required": false
            },
            {
                "name": "redshift_subnets",
                "type": "list(string)",
                "description": "A list of redshift subnets",
                "default": "[]",
                "required": false
            },
            {
                "name": "enable_dns_support",
                "type": "bool",
                "description": "Should be true to enable DNS support in the VPC",
                "default": "true",
                "required": false
            },
            {
                "name": "public_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Public subnets outbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "manage_default_security_group",
                "type": "bool",
                "description": "Should be true to adopt and manage default security group",
                "default": "false",
                "required": false
            },
            {
                "name": "vpn_gateway_id",
                "type": "string",
                "description": "ID of VPN Gateway to attach to the VPC",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "vpn_gateway_tags",
                "type": "map(string)",
                "description": "Additional tags for the VPN gateway",
                "default": "{}",
                "required": false
            },
            {
                "name": "manage_default_vpc",
                "type": "bool",
                "description": "Should be true to adopt and manage Default VPC",
                "default": "false",
                "required": false
            },
            {
                "name": "intra_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "enable_flow_log",
                "type": "bool",
                "description": "Whether or not to enable VPC Flow Logs",
                "default": "false",
                "required": false
            },
            {
                "name": "amazon_side_asn",
                "type": "string",
                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.",
                "default": "\"64512\"",
                "required": false
            },
            {
                "name": "database_subnet_group_tags",
                "type": "map(string)",
                "description": "Additional tags for the database subnet group",
                "default": "{}",
                "required": false
            },
            {
                "name": "redshift_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the redshift subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "create_redshift_subnet_route_table",
                "type": "bool",
                "description": "Controls if separate route table for redshift should be created",
                "default": "false",
                "required": false
            },
            {
                "name": "redshift_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the redshift route tables",
                "default": "{}",
                "required": false
            },
            {
                "name": "create_database_subnet_group",
                "type": "bool",
                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
                "default": "true",
                "required": false
            },
            {
                "name": "elasticache_subnet_group_tags",
                "type": "map(string)",
                "description": "Additional tags for the elasticache subnet group",
                "default": "{}",
                "required": false
            },
            {
                "name": "intra_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the intra subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "default_vpc_enable_dns_hostnames",
                "type": "bool",
                "description": "Should be true to enable DNS hostnames in the Default VPC",
                "default": "false",
                "required": false
            },
            {
                "name": "database_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Database subnets outbound network ACL rules",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "redshift_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "public_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to public subnets name",
                "default": "\"public\"",
                "required": false
            },
            {
                "name": "intra_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to intra subnets name",
                "default": "\"intra\"",
                "required": false
            },
            {
                "name": "vpc_tags",
                "type": "map(string)",
                "description": "Additional tags for the VPC",
                "default": "{}",
                "required": false
            },
            {
                "name": "vpc_flow_log_permissions_boundary",
                "type": "string",
                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
                "default": "",
                "required": true
            },
            {
                "name": "redshift_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "create_flow_log_cloudwatch_log_group",
                "type": "bool",
                "description": "Whether to create CloudWatch log group for VPC Flow Logs",
                "default": "false",
                "required": false
            },
            {
                "name": "name",
                "type": "string",
                "description": "Name to be used on all the resources as identifier",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "intra_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "false",
                "required": false
            },
            {
                "name": "database_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Database subnets inbound network ACL rules",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "flow_log_cloudwatch_iam_role_arn",
                "type": "string",
                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "enable_vpn_gateway",
                "type": "bool",
                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
                "default": "false",
                "required": false
            },
            {
                "name": "dhcp_options_netbios_name_servers",
                "type": "list(string)",
                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
                "default": "[]",
                "required": false
            },
            {
                "name": "default_vpc_enable_classiclink",
                "type": "bool",
                "description": "Should be true to enable ClassicLink in the Default VPC",
                "default": "false",
                "required": false
            },
            {
                "name": "dhcp_options_domain_name_servers",
                "type": "list(string)",
                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
                "default": "[\n  \"AmazonProvidedDNS\"\n]",
                "required": false
            },
            {
                "name": "outpost_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "outpost_subnets",
                "type": "list(string)",
                "description": "A list of outpost subnets inside the VPC",
                "default": "[]",
                "required": false
            },
            {
                "name": "enable_public_redshift",
                "type": "bool",
                "description": "Controls if redshift should have public routing table",
                "default": "false",
                "required": false
            },
            {
                "name": "vpc_flow_log_tags",
                "type": "map(string)",
                "description": "Additional tags for the VPC Flow Logs",
                "default": "{}",
                "required": false
            },
            {
                "name": "elasticache_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Elasticache subnets outbound network ACL rules",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "default_security_group_tags",
                "type": "map(string)",
                "description": "Additional tags for the default security group",
                "default": "{}",
                "required": false
            },
            {
                "name": "flow_log_cloudwatch_log_group_name_prefix",
                "type": "string",
                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs.",
                "default": "\"/aws/vpc-flow-log/\"",
                "required": false
            },
            {
                "name": "outpost_az",
                "type": "string",
                "description": "AZ where Outpost is anchored.",
                "default": "",
                "required": true
            },
            {
                "name": "public_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "external_nat_ips",
                "type": "list(string)",
                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
                "default": "[]",
                "required": false
            },
            {
                "name": "private_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the private subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "elasticache_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the elasticache subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "elasticache_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "public_subnets",
                "type": "list(string)",
                "description": "A list of public subnets inside the VPC",
                "default": "[]",
                "required": false
            },
            {
                "name": "one_nat_gateway_per_az",
                "type": "bool",
                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
                "default": "false",
                "required": false
            },
            {
                "name": "intra_outbound_acl_rules",
                "type": "list(map(string))",
                "description": "Intra subnets outbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "create_flow_log_cloudwatch_iam_role",
                "type": "bool",
                "description": "Whether to create IAM role for VPC Flow Logs",
                "default": "false",
                "required": false
            },
            {
                "name": "intra_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "default_route_table_routes",
                "type": "list(map(string))",
                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
                "default": "[]",
                "required": false
            },
            {
                "name": "database_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the database subnets network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "elasticache_subnet_group_name",
                "type": "string",
                "description": "Name of elasticache subnet group",
                "default": "",
                "required": true
            },
            {
                "name": "default_network_acl_tags",
                "type": "map(string)",
                "description": "Additional tags for the Default Network ACL",
                "default": "{}",
                "required": false
            },
            {
                "name": "elasticache_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "default_network_acl_ingress",
                "type": "list(map(string))",
                "description": "List of maps of ingress rules to set on the Default Network ACL",
                "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  },\n  {\n    \"action\": \"allow\",\n    \"from_port\": 0,\n    \"ipv6_cidr_block\": \"::/0\",\n    \"protocol\": \"-1\",\n    \"rule_no\": 101,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "default_network_acl_egress",
                "type": "list(map(string))",
                "description": "List of maps of egress rules to set on the Default Network ACL",
                "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  },\n  {\n    \"action\": \"allow\",\n    \"from_port\": 0,\n    \"ipv6_cidr_block\": \"::/0\",\n    \"protocol\": \"-1\",\n    \"rule_no\": 101,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "redshift_subnet_ipv6_prefixes",
                "type": "list(string)",
                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
                "default": "[]",
                "required": false
            },
            {
                "name": "database_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to database subnets name",
                "default": "\"db\"",
                "required": false
            },
            {
                "name": "elasticache_subnets",
                "type": "list(string)",
                "description": "A list of elasticache subnets",
                "default": "[]",
                "required": false
            },
            {
                "name": "create_igw",
                "type": "bool",
                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them.",
                "default": "true",
                "required": false
            },
            {
                "name": "database_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "private_inbound_acl_rules",
                "type": "list(map(string))",
                "description": "Private subnets inbound network ACLs",
                "default": "[\n  {\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_action\": \"allow\",\n    \"rule_number\": 100,\n    \"to_port\": 0\n  }\n]",
                "required": false
            },
            {
                "name": "private_subnet_suffix",
                "type": "string",
                "description": "Suffix to append to private subnets name",
                "default": "\"private\"",
                "required": false
            },
            {
                "name": "default_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the default route table",
                "default": "{}",
                "required": false
            },
            {
                "name": "dhcp_options_ntp_servers",
                "type": "list(string)",
                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
                "default": "[]",
                "required": false
            },
            {
                "name": "elasticache_subnet_tags",
                "type": "map(string)",
                "description": "Additional tags for the elasticache subnets",
                "default": "{}",
                "required": false
            },
            {
                "name": "dhcp_options_netbios_node_type",
                "type": "string",
                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "default_vpc_enable_dns_support",
                "type": "bool",
                "description": "Should be true to enable DNS support in the Default VPC",
                "default": "true",
                "required": false
            },
            {
                "name": "flow_log_max_aggregation_interval",
                "type": "number",
                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.",
                "default": "600",
                "required": false
            },
            {
                "name": "create_redshift_subnet_group",
                "type": "bool",
                "description": "Controls if redshift subnet group should be created",
                "default": "true",
                "required": false
            },
            {
                "name": "enable_classiclink",
                "type": "bool",
                "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
                "default": "",
                "required": true
            },
            {
                "name": "single_nat_gateway",
                "type": "bool",
                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
                "default": "false",
                "required": false
            },
            {
                "name": "propagate_intra_route_tables_vgw",
                "type": "bool",
                "description": "Should be true if you want route table propagation",
                "default": "false",
                "required": false
            },
            {
                "name": "flow_log_log_format",
                "type": "string",
                "description": "The fields to include in the flow log record, in the order in which they should appear.",
                "default": "",
                "required": true
            },
            {
                "name": "flow_log_cloudwatch_log_group_retention_in_days",
                "type": "number",
                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.",
                "default": "",
                "required": true
            },
            {
                "name": "azs",
                "type": "list(string)",
                "description": "A list of availability zones names or ids in the region",
                "default": "[]",
                "required": false
            },
            {
                "name": "redshift_subnet_group_tags",
                "type": "map(string)",
                "description": "Additional tags for the redshift subnet group",
                "default": "{}",
                "required": false
            },
            {
                "name": "propagate_private_route_tables_vgw",
                "type": "bool",
                "description": "Should be true if you want route table propagation",
                "default": "false",
                "required": false
            },
            {
                "name": "default_vpc_name",
                "type": "string",
                "description": "Name to be used on the Default VPC",
                "default": "\"\"",
                "required": false
            },
            {
                "name": "private_dedicated_network_acl",
                "type": "bool",
                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
                "default": "false",
                "required": false
            },
            {
                "name": "default_security_group_egress",
                "type": "list(map(string))",
                "description": "List of maps of egress rules to set on the default security group",
                "default": "",
                "required": true
            },
            {
                "name": "database_subnets",
                "type": "list(string)",
                "description": "A list of database subnets",
                "default": "[]",
                "required": false
            },
            {
                "name": "create_database_internet_gateway_route",
                "type": "bool",
                "description": "Controls if an internet gateway route for public database access should be created",
                "default": "false",
                "required": false
            },
            {
                "name": "enable_nat_gateway",
                "type": "bool",
                "description": "Should be true if you want to provision NAT Gateways for each of your private networks",
                "default": "false",
                "required": false
            },
            {
                "name": "outpost_subnet_assign_ipv6_address_on_creation",
                "type": "bool",
                "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
                "default": "",
                "required": true
            },
            {
                "name": "enable_classiclink_dns_support",
                "type": "bool",
                "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
                "default": "",
                "required": true
            },
            {
                "name": "private_route_table_tags",
                "type": "map(string)",
                "description": "Additional tags for the private route tables",
                "default": "{}",
                "required": false
            }
        ],
        "outputs": [
            {
                "name": "private_ipv6_egress_route_ids",
                "description": "List of IDs of the ipv6 egress route."
            },
            {
                "name": "nat_public_ips",
                "description": "List of public Elastic IPs created for AWS NAT Gateway"
            },
            {
                "name": "vpc_flow_log_destination_arn",
                "description": "The ARN of the destination for VPC Flow Logs"
            },
            {
                "name": "database_nat_gateway_route_ids",
                "description": "List of IDs of the database nat gateway route."
            },
            {
                "name": "intra_subnets",
                "description": "List of IDs of intra subnets"
            },
            {
                "name": "elasticache_subnet_arns",
                "description": "List of ARNs of elasticache subnets"
            },
            {
                "name": "intra_network_acl_id",
                "description": "ID of the intra network ACL"
            },
            {
                "name": "default_security_group_id",
                "description": "The ID of the security group created by default on VPC creation"
            },
            {
                "name": "vpc_owner_id",
                "description": "The ID of the AWS account that owns the VPC"
            },
            {
                "name": "intra_subnet_arns",
                "description": "List of ARNs of intra subnets"
            },
            {
                "name": "redshift_route_table_ids",
                "description": "List of IDs of redshift route tables"
            },
            {
                "name": "private_route_table_association_ids",
                "description": "List of IDs of the private route table association"
            },
            {
                "name": "name",
                "description": "The name of the VPC specified as argument to this module"
            },
            {
                "name": "vpc_secondary_cidr_blocks",
                "description": "List of secondary CIDR blocks of the VPC"
            },
            {
                "name": "redshift_subnet_arns",
                "description": "List of ARNs of redshift subnets"
            },
            {
                "name": "redshift_route_table_association_ids",
                "description": "List of IDs of the redshift route table association"
            },
            {
                "name": "redshift_network_acl_arn",
                "description": "ARN of the redshift network ACL"
            },
            {
                "name": "azs",
                "description": "A list of availability zones specified as argument to this module"
            },
            {
                "name": "vpc_arn",
                "description": "The ARN of the VPC"
            },
            {
                "name": "database_route_table_ids",
                "description": "List of IDs of database route tables"
            },
            {
                "name": "database_internet_gateway_route_id",
                "description": "ID of the database internet gateway route."
            },
            {
                "name": "igw_id",
                "description": "The ID of the Internet Gateway"
            },
            {
                "name": "default_vpc_enable_dns_hostnames",
                "description": "Whether or not the Default VPC has DNS hostname support"
            },
            {
                "name": "outpost_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
            },
            {
                "name": "vpc_enable_dns_support",
                "description": "Whether or not the VPC has DNS support"
            },
            {
                "name": "vpc_ipv6_cidr_block",
                "description": "The IPv6 CIDR block"
            },
            {
                "name": "private_subnet_arns",
                "description": "List of ARNs of private subnets"
            },
            {
                "name": "database_subnets",
                "description": "List of IDs of database subnets"
            },
            {
                "name": "private_network_acl_arn",
                "description": "ARN of the private network ACL"
            },
            {
                "name": "outpost_network_acl_id",
                "description": "ID of the outpost network ACL"
            },
            {
                "name": "vpc_instance_tenancy",
                "description": "Tenancy of instances spin up within VPC"
            },
            {
                "name": "outpost_subnet_arns",
                "description": "List of ARNs of outpost subnets"
            },
            {
                "name": "elasticache_subnets",
                "description": "List of IDs of elasticache subnets"
            },
            {
                "name": "public_internet_gateway_route_id",
                "description": "ID of the internet gateway route."
            },
            {
                "name": "public_internet_gateway_ipv6_route_id",
                "description": "ID of the IPv6 internet gateway route."
            },
            {
                "name": "cgw_ids",
                "description": "List of IDs of Customer Gateway"
            },
            {
                "name": "database_subnets_cidr_blocks",
                "description": "List of cidr_blocks of database subnets"
            },
            {
                "name": "database_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
            },
            {
                "name": "intra_route_table_ids",
                "description": "List of IDs of intra route tables"
            },
            {
                "name": "elasticache_subnet_group_name",
                "description": "Name of elasticache subnet group"
            },
            {
                "name": "default_vpc_default_route_table_id",
                "description": "The ID of the default route table of the Default VPC"
            },
            {
                "name": "private_subnets_cidr_blocks",
                "description": "List of cidr_blocks of private subnets"
            },
            {
                "name": "private_subnets",
                "description": "List of IDs of private subnets"
            },
            {
                "name": "vpc_main_route_table_id",
                "description": "The ID of the main route table associated with this VPC"
            },
            {
                "name": "elasticache_route_table_ids",
                "description": "List of IDs of elasticache route tables"
            },
            {
                "name": "redshift_subnets_cidr_blocks",
                "description": "List of cidr_blocks of redshift subnets"
            },
            {
                "name": "redshift_public_route_table_association_ids",
                "description": "List of IDs of the public redshidt route table association"
            },
            {
                "name": "intra_network_acl_arn",
                "description": "ARN of the intra network ACL"
            },
            {
                "name": "elasticache_network_acl_id",
                "description": "ID of the elasticache network ACL"
            },
            {
                "name": "default_vpc_enable_dns_support",
                "description": "Whether or not the Default VPC has DNS support"
            },
            {
                "name": "vpc_flow_log_id",
                "description": "The ID of the Flow Log resource"
            },
            {
                "name": "vpc_enable_dns_hostnames",
                "description": "Whether or not the VPC has DNS hostname support"
            },
            {
                "name": "outpost_subnets",
                "description": "List of IDs of outpost subnets"
            },
            {
                "name": "elasticache_subnets_cidr_blocks",
                "description": "List of cidr_blocks of elasticache subnets"
            },
            {
                "name": "intra_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
            },
            {
                "name": "database_route_table_association_ids",
                "description": "List of IDs of the database route table association"
            },
            {
                "name": "vgw_id",
                "description": "The ID of the VPN Gateway"
            },
            {
                "name": "vpc_id",
                "description": "The ID of the VPC"
            },
            {
                "name": "public_network_acl_id",
                "description": "ID of the public network ACL"
            },
            {
                "name": "database_network_acl_arn",
                "description": "ARN of the database network ACL"
            },
            {
                "name": "elasticache_network_acl_arn",
                "description": "ARN of the elasticache network ACL"
            },
            {
                "name": "elasticache_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
            },
            {
                "name": "default_vpc_default_network_acl_id",
                "description": "The ID of the default network ACL of the Default VPC"
            },
            {
                "name": "outpost_network_acl_arn",
                "description": "ARN of the outpost network ACL"
            },
            {
                "name": "redshift_network_acl_id",
                "description": "ID of the redshift network ACL"
            },
            {
                "name": "elasticache_route_table_association_ids",
                "description": "List of IDs of the elasticache route table association"
            },
            {
                "name": "private_route_table_ids",
                "description": "List of IDs of private route tables"
            },
            {
                "name": "igw_arn",
                "description": "The ARN of the Internet Gateway"
            },
            {
                "name": "redshift_subnets",
                "description": "List of IDs of redshift subnets"
            },
            {
                "name": "public_subnets",
                "description": "List of IDs of public subnets"
            },
            {
                "name": "database_subnet_group",
                "description": "ID of database subnet group"
            },
            {
                "name": "redshift_subnet_group",
                "description": "ID of redshift subnet group"
            },
            {
                "name": "default_vpc_default_security_group_id",
                "description": "The ID of the security group created by default on Default VPC creation"
            },
            {
                "name": "default_network_acl_id",
                "description": "The ID of the default network ACL"
            },
            {
                "name": "default_vpc_main_route_table_id",
                "description": "The ID of the main route table associated with the Default VPC"
            },
            {
                "name": "vpc_cidr_block",
                "description": "The CIDR block of the VPC"
            },
            {
                "name": "database_subnet_group_name",
                "description": "Name of database subnet group"
            },
            {
                "name": "redshift_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
            },
            {
                "name": "default_vpc_cidr_block",
                "description": "The CIDR block of the Default VPC"
            },
            {
                "name": "private_network_acl_id",
                "description": "ID of the private network ACL"
            },
            {
                "name": "database_network_acl_id",
                "description": "ID of the database network ACL"
            },
            {
                "name": "vpc_flow_log_destination_type",
                "description": "The type of the destination for VPC Flow Logs"
            },
            {
                "name": "public_subnets_cidr_blocks",
                "description": "List of cidr_blocks of public subnets"
            },
            {
                "name": "public_subnet_arns",
                "description": "List of ARNs of public subnets"
            },
            {
                "name": "public_route_table_ids",
                "description": "List of IDs of public route tables"
            },
            {
                "name": "private_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
            },
            {
                "name": "database_subnet_arns",
                "description": "List of ARNs of database subnets"
            },
            {
                "name": "public_network_acl_arn",
                "description": "ARN of the public network ACL"
            },
            {
                "name": "vpc_ipv6_association_id",
                "description": "The association ID for the IPv6 CIDR block"
            },
            {
                "name": "public_subnets_ipv6_cidr_blocks",
                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
            },
            {
                "name": "default_vpc_id",
                "description": "The ID of the Default VPC"
            },
            {
                "name": "egress_only_internet_gateway_id",
                "description": "The ID of the egress only Internet Gateway"
            },
            {
                "name": "dhcp_options_id",
                "description": "The ID of the DHCP options"
            },
            {
                "name": "natgw_ids",
                "description": "List of NAT Gateway IDs"
            },
            {
                "name": "this_customer_gateway",
                "description": "Map of Customer Gateway attributes"
            },
            {
                "name": "default_vpc_arn",
                "description": "The ARN of the Default VPC"
            },
            {
                "name": "default_vpc_instance_tenancy",
                "description": "Tenancy of instances spin up within Default VPC"
            },
            {
                "name": "vpc_flow_log_cloudwatch_iam_role_arn",
                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
            },
            {
                "name": "database_ipv6_egress_route_id",
                "description": "ID of the database IPv6 egress route."
            },
            {
                "name": "elasticache_subnet_group",
                "description": "ID of elasticache subnet group"
            },
            {
                "name": "private_nat_gateway_route_ids",
                "description": "List of IDs of the private nat gateway route."
            },
            {
                "name": "intra_route_table_association_ids",
                "description": "List of IDs of the intra route table association"
            },
            {
                "name": "public_route_table_association_ids",
                "description": "List of IDs of the public route table association"
            },
            {
                "name": "default_route_table_id",
                "description": "The ID of the default route table"
            },
            {
                "name": "outpost_subnets_cidr_blocks",
                "description": "List of cidr_blocks of outpost subnets"
            },
            {
                "name": "intra_subnets_cidr_blocks",
                "description": "List of cidr_blocks of intra subnets"
            },
            {
                "name": "nat_ids",
                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
            },
            {
                "name": "cgw_arns",
                "description": "List of ARNs of Customer Gateway"
            },
            {
                "name": "vgw_arn",
                "description": "The ARN of the VPN Gateway"
            }
        ],
        "dependencies": [],
        "provider_dependencies": [
            {
                "name": "aws",
                "namespace": "hashicorp",
                "source": "hashicorp/aws",
                "version": "\u003e= 3.38"
            }
        ],
        "resources": [
            {
                "name": "database_ipv6_egress",
                "type": "aws_route"
            },
            {
                "name": "database",
                "type": "aws_db_subnet_group"
            },
            {
                "name": "private_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "this",
                "type": "aws_vpn_gateway"
            },
            {
                "name": "intra",
                "type": "aws_route_table"
            },
            {
                "name": "public",
                "type": "aws_subnet"
            },
            {
                "name": "public_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "private",
                "type": "aws_route_table_association"
            },
            {
                "name": "intra",
                "type": "aws_route_table_association"
            },
            {
                "name": "redshift",
                "type": "aws_subnet"
            },
            {
                "name": "elasticache",
                "type": "aws_subnet"
            },
            {
                "name": "intra_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "redshift_public",
                "type": "aws_route_table_association"
            },
            {
                "name": "vpc_flow_log_cloudwatch",
                "type": "aws_iam_role"
            },
            {
                "name": "default",
                "type": "aws_default_route_table"
            },
            {
                "name": "public",
                "type": "aws_route_table"
            },
            {
                "name": "private",
                "type": "aws_route_table"
            },
            {
                "name": "this",
                "type": "aws_default_network_acl"
            },
            {
                "name": "public",
                "type": "aws_network_acl"
            },
            {
                "name": "intra_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "public_internet_gateway_ipv6",
                "type": "aws_route"
            },
            {
                "name": "elasticache",
                "type": "aws_route_table"
            },
            {
                "name": "public_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "flow_log",
                "type": "aws_cloudwatch_log_group"
            },
            {
                "name": "vpc_flow_log_cloudwatch",
                "type": "aws_iam_policy"
            },
            {
                "name": "public",
                "type": "aws_route_table_association"
            },
            {
                "name": "outpost",
                "type": "aws_subnet"
            },
            {
                "name": "database",
                "type": "aws_route_table_association"
            },
            {
                "name": "elasticache",
                "type": "aws_route_table_association"
            },
            {
                "name": "this",
                "type": "aws_vpc"
            },
            {
                "name": "outpost_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "database_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "intra",
                "type": "aws_vpn_gateway_route_propagation"
            },
            {
                "name": "elasticache",
                "type": "aws_network_acl"
            },
            {
                "name": "nat",
                "type": "aws_eip"
            },
            {
                "name": "this",
                "type": "aws_vpc_ipv4_cidr_block_association"
            },
            {
                "name": "this",
                "type": "aws_default_security_group"
            },
            {
                "name": "this",
                "type": "aws_egress_only_internet_gateway"
            },
            {
                "name": "database_nat_gateway",
                "type": "aws_route"
            },
            {
                "name": "database",
                "type": "aws_subnet"
            },
            {
                "name": "database_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "private",
                "type": "aws_vpn_gateway_route_propagation"
            },
            {
                "name": "this",
                "type": "aws_internet_gateway"
            },
            {
                "name": "intra",
                "type": "aws_network_acl"
            },
            {
                "name": "elasticache_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "redshift",
                "type": "aws_redshift_subnet_group"
            },
            {
                "name": "intra",
                "type": "aws_subnet"
            },
            {
                "name": "outpost_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "this",
                "type": "aws_customer_gateway"
            },
            {
                "name": "this",
                "type": "aws_default_vpc"
            },
            {
                "name": "this",
                "type": "aws_vpn_gateway_attachment"
            },
            {
                "name": "this",
                "type": "aws_vpc_dhcp_options_association"
            },
            {
                "name": "public_internet_gateway",
                "type": "aws_route"
            },
            {
                "name": "outpost",
                "type": "aws_network_acl"
            },
            {
                "name": "redshift_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "elasticache_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "private_ipv6_egress",
                "type": "aws_route"
            },
            {
                "name": "this",
                "type": "aws_vpc_dhcp_options"
            },
            {
                "name": "database",
                "type": "aws_route_table"
            },
            {
                "name": "private_outbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "redshift",
                "type": "aws_network_acl"
            },
            {
                "name": "outpost",
                "type": "aws_route_table_association"
            },
            {
                "name": "database_internet_gateway",
                "type": "aws_route"
            },
            {
                "name": "private",
                "type": "aws_subnet"
            },
            {
                "name": "elasticache",
                "type": "aws_elasticache_subnet_group"
            },
            {
                "name": "private",
                "type": "aws_network_acl"
            },
            {
                "name": "database",
                "type": "aws_network_acl"
            },
            {
                "name": "this",
                "type": "aws_flow_log"
            },
            {
                "name": "redshift",
                "type": "aws_route_table"
            },
            {
                "name": "redshift_inbound",
                "type": "aws_network_acl_rule"
            },
            {
                "name": "this",
                "type": "aws_nat_gateway"
            },
            {
                "name": "private_nat_gateway",
                "type": "aws_route"
            },
            {
                "name": "redshift",
                "type": "aws_route_table_association"
            },
            {
                "name": "public",
                "type": "aws_vpn_gateway_route_propagation"
            },
            {
                "name": "vpc_flow_log_cloudwatch",
                "type": "aws_iam_role_policy_attachment"
            }
        ]
    },
    "submodules": [
        {
            "path": "modules/vpc-endpoints",
            "name": "vpc-endpoints",
            "readme": "# AWS VPC Endpoints Terraform sub-module\n\nTerraform sub-module which creates VPC endpoint resources on AWS.\n\n## Usage\n\nSee [`examples`](../../examples) directory for working examples to reference:\n\n```hcl\nmodule \"endpoints\" {\n  source = \"terraform-aws-modules/vpc/aws//modules/vpc-endpoints\"\n\n  vpc_id             = \"vpc-12345678\"\n  security_group_ids = [\"sg-12345678\"]\n\n  endpoints = {\n    s3 = {\n      # interface endpoint\n      service             = \"s3\"\n      tags                = { Name = \"s3-vpc-endpoint\" }\n    },\n    dynamodb = {\n      # gateway endpoint\n      service         = \"dynamodb\"\n      route_table_ids = [\"rt-12322456\", \"rt-43433343\", \"rt-11223344\"]\n      tags            = { Name = \"dynamodb-vpc-endpoint\" }\n    },\n    sns = {\n      service    = \"sns\"\n      subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n      tags       = { Name = \"sns-vpc-endpoint\" }\n    },\n    sqs = {\n      service             = \"sqs\"\n      private_dns_enabled = true\n      security_group_ids  = [\"sg-987654321\"]\n      subnet_ids          = [\"subnet-12345678\", \"subnet-87654321\"]\n      tags                = { Name = \"sqs-vpc-endpoint\" }\n    },\n  }\n\n  tags = {\n    Owner       = \"user\"\n    Environment = \"dev\"\n  }\n}\n```\n\n## Examples\n\n- [Complete-VPC](../../examples/complete-vpc) with VPC Endpoints.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"provider_aws\"\u003e\u003c/a\u003e [aws](#provider\\_aws) | \u003e= 3.28 |\n\n## Modules\n\nNo modules.\n\n## Resources\n\n| Name | Type |\n|------|------|\n| [aws_vpc_endpoint.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint) | resource |\n| [aws_vpc_endpoint_service.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/vpc_endpoint_service) | data source |\n\n## Inputs\n\n| Name | Description | Type | Default | Required |\n|------|-------------|------|---------|:--------:|\n| \u003ca name=\"input_create\"\u003e\u003c/a\u003e [create](#input\\_create) | Determines whether resources will be created | `bool` | `true` | no |\n| \u003ca name=\"input_endpoints\"\u003e\u003c/a\u003e [endpoints](#input\\_endpoints) | A map of interface and/or gateway endpoints containing their properties and configurations | `any` | `{}` | no |\n| \u003ca name=\"input_security_group_ids\"\u003e\u003c/a\u003e [security\\_group\\_ids](#input\\_security\\_group\\_ids) | Default security group IDs to associate with the VPC endpoints | `list(string)` | `[]` | no |\n| \u003ca name=\"input_subnet_ids\"\u003e\u003c/a\u003e [subnet\\_ids](#input\\_subnet\\_ids) | Default subnets IDs to associate with the VPC endpoints | `list(string)` | `[]` | no |\n| \u003ca name=\"input_tags\"\u003e\u003c/a\u003e [tags](#input\\_tags) | A map of tags to use on all resources | `map(string)` | `{}` | no |\n| \u003ca name=\"input_timeouts\"\u003e\u003c/a\u003e [timeouts](#input\\_timeouts) | Define maximum timeout for creating, updating, and deleting VPC endpoint resources | `map(string)` | `{}` | no |\n| \u003ca name=\"input_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#input\\_vpc\\_id) | The ID of the VPC in which the endpoint will be used | `string` | `null` | no |\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_endpoints\"\u003e\u003c/a\u003e [endpoints](#output\\_endpoints) | Array containing the full resource object and attributes for all endpoints created |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [
                {
                    "name": "create",
                    "type": "bool",
                    "description": "Determines whether resources will be created",
                    "default": "true",
                    "required": false
                },
                {
                    "name": "vpc_id",
                    "type": "string",
                    "description": "The ID of the VPC in which the endpoint will be used",
                    "default": "",
                    "required": true
                },
                {
                    "name": "endpoints",
                    "type": "any",
                    "description": "A map of interface and/or gateway endpoints containing their properties and configurations",
                    "default": "{}",
                    "required": false
                },
                {
                    "name": "security_group_ids",
                    "type": "list(string)",
                    "description": "Default security group IDs to associate with the VPC endpoints",
                    "default": "[]",
                    "required": false
                },
                {
                    "name": "subnet_ids",
                    "type": "list(string)",
                    "description": "Default subnets IDs to associate with the VPC endpoints",
                    "default": "[]",
                    "required": false
                },
                {
                    "name": "tags",
                    "type": "map(string)",
                    "description": "A map of tags to use on all resources",
                    "default": "{}",
                    "required": false
                },
                {
                    "name": "timeouts",
                    "type": "map(string)",
                    "description": "Define maximum timeout for creating, updating, and deleting VPC endpoint resources",
                    "default": "{}",
                    "required": false
                }
            ],
            "outputs": [
                {
                    "name": "endpoints",
                    "description": "Array containing the full resource object and attributes for all endpoints created"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": [
                {
                    "name": "this",
                    "type": "aws_vpc_endpoint"
                }
            ]
        }
    ],
    "examples": [
        {
            "path": "examples/issues",
            "name": "issues",
            "readme": "# Issues\n\nConfiguration in this directory creates set of VPC resources to cover issues reported on GitHub:\n\n- https://github.com/terraform-aws-modules/terraform-aws-vpc/issues/44\n- https://github.com/terraform-aws-modules/terraform-aws-vpc/issues/46\n- https://github.com/terraform-aws-modules/terraform-aws-vpc/issues/102\n- https://github.com/terraform-aws-modules/terraform-aws-vpc/issues/108\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc_issue_108\"\u003e\u003c/a\u003e [vpc\\_issue\\_108](#module\\_vpc\\_issue\\_108) | ../../ |  |\n| \u003ca name=\"module_vpc_issue_44\"\u003e\u003c/a\u003e [vpc\\_issue\\_44](#module\\_vpc\\_issue\\_44) | ../../ |  |\n| \u003ca name=\"module_vpc_issue_46\"\u003e\u003c/a\u003e [vpc\\_issue\\_46](#module\\_vpc\\_issue\\_46) | ../../ |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_issue_108_database_subnets\"\u003e\u003c/a\u003e [issue\\_108\\_database\\_subnets](#output\\_issue\\_108\\_database\\_subnets) | List of IDs of database subnets |\n| \u003ca name=\"output_issue_108_elasticache_subnets\"\u003e\u003c/a\u003e [issue\\_108\\_elasticache\\_subnets](#output\\_issue\\_108\\_elasticache\\_subnets) | List of IDs of elasticache subnets |\n| \u003ca name=\"output_issue_108_nat_public_ips\"\u003e\u003c/a\u003e [issue\\_108\\_nat\\_public\\_ips](#output\\_issue\\_108\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_issue_108_private_subnets\"\u003e\u003c/a\u003e [issue\\_108\\_private\\_subnets](#output\\_issue\\_108\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_issue_108_public_subnets\"\u003e\u003c/a\u003e [issue\\_108\\_public\\_subnets](#output\\_issue\\_108\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_issue_108_vpc_id\"\u003e\u003c/a\u003e [issue\\_108\\_vpc\\_id](#output\\_issue\\_108\\_vpc\\_id) | The ID of the VPC |\n| \u003ca name=\"output_issue_44_database_subnets\"\u003e\u003c/a\u003e [issue\\_44\\_database\\_subnets](#output\\_issue\\_44\\_database\\_subnets) | List of IDs of database subnets |\n| \u003ca name=\"output_issue_44_elasticache_subnets\"\u003e\u003c/a\u003e [issue\\_44\\_elasticache\\_subnets](#output\\_issue\\_44\\_elasticache\\_subnets) | List of IDs of elasticache subnets |\n| \u003ca name=\"output_issue_44_nat_public_ips\"\u003e\u003c/a\u003e [issue\\_44\\_nat\\_public\\_ips](#output\\_issue\\_44\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_issue_44_private_subnets\"\u003e\u003c/a\u003e [issue\\_44\\_private\\_subnets](#output\\_issue\\_44\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_issue_44_public_subnets\"\u003e\u003c/a\u003e [issue\\_44\\_public\\_subnets](#output\\_issue\\_44\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_issue_44_vpc_id\"\u003e\u003c/a\u003e [issue\\_44\\_vpc\\_id](#output\\_issue\\_44\\_vpc\\_id) | The ID of the VPC |\n| \u003ca name=\"output_issue_46_database_subnets\"\u003e\u003c/a\u003e [issue\\_46\\_database\\_subnets](#output\\_issue\\_46\\_database\\_subnets) | List of IDs of database subnets |\n| \u003ca name=\"output_issue_46_elasticache_subnets\"\u003e\u003c/a\u003e [issue\\_46\\_elasticache\\_subnets](#output\\_issue\\_46\\_elasticache\\_subnets) | List of IDs of elasticache subnets |\n| \u003ca name=\"output_issue_46_nat_public_ips\"\u003e\u003c/a\u003e [issue\\_46\\_nat\\_public\\_ips](#output\\_issue\\_46\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_issue_46_private_subnets\"\u003e\u003c/a\u003e [issue\\_46\\_private\\_subnets](#output\\_issue\\_46\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_issue_46_public_subnets\"\u003e\u003c/a\u003e [issue\\_46\\_public\\_subnets](#output\\_issue\\_46\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_issue_46_vpc_id\"\u003e\u003c/a\u003e [issue\\_46\\_vpc\\_id](#output\\_issue\\_46\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "issue_44_database_subnets",
                    "description": "List of IDs of database subnets"
                },
                {
                    "name": "issue_44_elasticache_subnets",
                    "description": "List of IDs of elasticache subnets"
                },
                {
                    "name": "issue_46_vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "issue_46_private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "issue_46_database_subnets",
                    "description": "List of IDs of database subnets"
                },
                {
                    "name": "issue_46_elasticache_subnets",
                    "description": "List of IDs of elasticache subnets"
                },
                {
                    "name": "issue_108_vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "issue_108_elasticache_subnets",
                    "description": "List of IDs of elasticache subnets"
                },
                {
                    "name": "issue_108_nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "issue_44_private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "issue_44_nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "issue_108_public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "issue_46_public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "issue_108_private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "issue_44_vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "issue_44_public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "issue_46_nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "issue_108_database_subnets",
                    "description": "List of IDs of database subnets"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/simple-vpc",
            "name": "simple-vpc",
            "readme": "# Simple VPC\n\nConfiguration in this directory creates set of VPC resources which may be sufficient for development environment.\n\nThere is a public and private subnet created per availability zone in addition to single NAT Gateway shared between all 3 availability zones.\n\nThis configuration uses Availability Zone IDs and Availability Zone names for demonstration purposes. Normally, you need to specify only names or IDs.\n\n[Read more about AWS regions, availability zones and local zones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions-availability-zones).\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_azs\"\u003e\u003c/a\u003e [azs](#output\\_azs) | A list of availability zones spefified as argument to this module |\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_vpc_cidr_block\"\u003e\u003c/a\u003e [vpc\\_cidr\\_block](#output\\_vpc\\_cidr\\_block) | The CIDR block of the VPC |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "azs",
                    "description": "A list of availability zones spefified as argument to this module"
                },
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "vpc_cidr_block",
                    "description": "The CIDR block of the VPC"
                },
                {
                    "name": "private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/network-acls",
            "name": "network-acls",
            "readme": "# Simple VPC with Network ACLs\n\nConfiguration in this directory creates set of VPC resources along with network ACLs for several subnets.\n\nNetwork ACL rules for inbound and outbound traffic are defined as the following:\n1. Public and elasticache subnets will have network ACL rules provided\n1. Private subnets will be associated with the default network ACL rules (IPV4-only ingress and egress is open for all)\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_default_network_acl_id\"\u003e\u003c/a\u003e [default\\_network\\_acl\\_id](#output\\_default\\_network\\_acl\\_id) | The ID of the default network ACL |\n| \u003ca name=\"output_elasticache_network_acl_arn\"\u003e\u003c/a\u003e [elasticache\\_network\\_acl\\_arn](#output\\_elasticache\\_network\\_acl\\_arn) | ARN of the elasticache network ACL |\n| \u003ca name=\"output_elasticache_network_acl_id\"\u003e\u003c/a\u003e [elasticache\\_network\\_acl\\_id](#output\\_elasticache\\_network\\_acl\\_id) | ID of the elasticache network ACL |\n| \u003ca name=\"output_module_vpc\"\u003e\u003c/a\u003e [module\\_vpc](#output\\_module\\_vpc) | Module VPC |\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_private_network_acl_arn\"\u003e\u003c/a\u003e [private\\_network\\_acl\\_arn](#output\\_private\\_network\\_acl\\_arn) | ARN of the private network ACL |\n| \u003ca name=\"output_private_network_acl_id\"\u003e\u003c/a\u003e [private\\_network\\_acl\\_id](#output\\_private\\_network\\_acl\\_id) | ID of the private network ACL |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_public_network_acl_arn\"\u003e\u003c/a\u003e [public\\_network\\_acl\\_arn](#output\\_public\\_network\\_acl\\_arn) | ARN of the public network ACL |\n| \u003ca name=\"output_public_network_acl_id\"\u003e\u003c/a\u003e [public\\_network\\_acl\\_id](#output\\_public\\_network\\_acl\\_id) | ID of the public network ACL |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_vpc_cidr_block\"\u003e\u003c/a\u003e [vpc\\_cidr\\_block](#output\\_vpc\\_cidr\\_block) | The CIDR block of the VPC |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "vpc_cidr_block",
                    "description": "The CIDR block of the VPC"
                },
                {
                    "name": "nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "public_network_acl_id",
                    "description": "ID of the public network ACL"
                },
                {
                    "name": "private_network_acl_id",
                    "description": "ID of the private network ACL"
                },
                {
                    "name": "elasticache_network_acl_arn",
                    "description": "ARN of the elasticache network ACL"
                },
                {
                    "name": "module_vpc",
                    "description": "Module VPC"
                },
                {
                    "name": "private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "elasticache_network_acl_id",
                    "description": "ID of the elasticache network ACL"
                },
                {
                    "name": "default_network_acl_id",
                    "description": "The ID of the default network ACL"
                },
                {
                    "name": "public_network_acl_arn",
                    "description": "ARN of the public network ACL"
                },
                {
                    "name": "private_network_acl_arn",
                    "description": "ARN of the private network ACL"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/outpost",
            "name": "outpost",
            "readme": "# VPC with Outpost Subnet\n\nConfiguration in this directory creates a VPC with public, private, and private outpost subnets.\n\nThis configuration uses data-source to find an available Outpost by name. Change it according to your needs in order to run this example.\n\n[Read more about AWS regions, availability zones and local zones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions-availability-zones).\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"provider_aws\"\u003e\u003c/a\u003e [aws](#provider\\_aws) | \u003e= 3.28 |\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n\n## Resources\n\n| Name | Type |\n|------|------|\n| [aws_availability_zones.available](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/availability_zones) | data source |\n| [aws_outposts_outpost.shared](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/outposts_outpost) | data source |\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_azs\"\u003e\u003c/a\u003e [azs](#output\\_azs) | A list of availability zones specified as argument to this module |\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_outpost_subnets\"\u003e\u003c/a\u003e [outpost\\_subnets](#output\\_outpost\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_vpc_cidr_block\"\u003e\u003c/a\u003e [vpc\\_cidr\\_block](#output\\_vpc\\_cidr\\_block) | The CIDR block of the VPC |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "vpc_cidr_block",
                    "description": "The CIDR block of the VPC"
                },
                {
                    "name": "private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "outpost_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "azs",
                    "description": "A list of availability zones specified as argument to this module"
                },
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/vpc-separate-private-route-tables",
            "name": "vpc-separate-private-route-tables",
            "readme": "# VPC with separate private route tables\n\nConfiguration in this directory creates set of VPC resources which may be sufficient for staging or production environment (look into [simple-vpc](../simple-vpc) for more simplified setup). \n\nThere are public, private, database, ElastiCache, Redshift subnets, NAT Gateways created in each availability zone. **This example sets up separate private route for database, elasticache and redshift subnets.**.\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_database_subnets\"\u003e\u003c/a\u003e [database\\_subnets](#output\\_database\\_subnets) | List of IDs of database subnets |\n| \u003ca name=\"output_elasticache_subnets\"\u003e\u003c/a\u003e [elasticache\\_subnets](#output\\_elasticache\\_subnets) | List of IDs of elasticache subnets |\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_redshift_subnets\"\u003e\u003c/a\u003e [redshift\\_subnets](#output\\_redshift\\_subnets) | List of IDs of redshift subnets |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "database_subnets",
                    "description": "List of IDs of database subnets"
                },
                {
                    "name": "elasticache_subnets",
                    "description": "List of IDs of elasticache subnets"
                },
                {
                    "name": "redshift_subnets",
                    "description": "List of IDs of redshift subnets"
                },
                {
                    "name": "nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "public_subnets",
                    "description": "List of IDs of public subnets"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/vpc-flow-logs",
            "name": "vpc-flow-logs",
            "readme": "# VPC with enabled VPC flow log to S3 and CloudWatch logs\n\nConfiguration in this directory creates a set of VPC resources with VPC Flow Logs enabled in different configurations:\n\n1. `cloud-watch-logs.tf` - Push logs to a new AWS CloudWatch Log group.\n1. `cloud-watch-logs.tf` - Push logs to an existing AWS CloudWatch Log group using existing IAM role (created outside of this module).\n1. `s3.tf` - Push logs to an existing S3 bucket (created outside of this module).\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n| \u003ca name=\"requirement_random\"\u003e\u003c/a\u003e [random](#requirement\\_random) | \u003e= 2 |\n\n## Providers\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"provider_aws\"\u003e\u003c/a\u003e [aws](#provider\\_aws) | \u003e= 3.28 |\n| \u003ca name=\"provider_random\"\u003e\u003c/a\u003e [random](#provider\\_random) | \u003e= 2 |\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_s3_bucket\"\u003e\u003c/a\u003e [s3\\_bucket](#module\\_s3\\_bucket) | terraform-aws-modules/s3-bucket/aws | ~\u003e 1.0 |\n| \u003ca name=\"module_vpc_with_flow_logs_cloudwatch_logs\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs](#module\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs) | ../../ |  |\n| \u003ca name=\"module_vpc_with_flow_logs_cloudwatch_logs_default\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default](#module\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default) | ../../ |  |\n| \u003ca name=\"module_vpc_with_flow_logs_s3_bucket\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_s3\\_bucket](#module\\_vpc\\_with\\_flow\\_logs\\_s3\\_bucket) | ../../ |  |\n\n## Resources\n\n| Name | Type |\n|------|------|\n| [aws_cloudwatch_log_group.flow_log](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group) | resource |\n| [aws_iam_policy.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy) | resource |\n| [aws_iam_role.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n| [aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) | resource |\n| [random_pet.this](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/pet) | resource |\n| [aws_iam_policy_document.flow_log_cloudwatch_assume_role](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n| [aws_iam_policy_document.flow_log_s3](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n| [aws_iam_policy_document.vpc_flow_log_cloudwatch](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_vpc_flow_logs_s3_bucket_vpc_flow_log_destination_arn\"\u003e\u003c/a\u003e [vpc\\_flow\\_logs\\_s3\\_bucket\\_vpc\\_flow\\_log\\_destination\\_arn](#output\\_vpc\\_flow\\_logs\\_s3\\_bucket\\_vpc\\_flow\\_log\\_destination\\_arn) | The ARN of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_flow_logs_s3_bucket_vpc_flow_log_destination_type\"\u003e\u003c/a\u003e [vpc\\_flow\\_logs\\_s3\\_bucket\\_vpc\\_flow\\_log\\_destination\\_type](#output\\_vpc\\_flow\\_logs\\_s3\\_bucket\\_vpc\\_flow\\_log\\_destination\\_type) | The type of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_flow_logs_s3_bucket_vpc_flow_log_id\"\u003e\u003c/a\u003e [vpc\\_flow\\_logs\\_s3\\_bucket\\_vpc\\_flow\\_log\\_id](#output\\_vpc\\_flow\\_logs\\_s3\\_bucket\\_vpc\\_flow\\_log\\_id) | The ID of the Flow Log resource |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_cloudwatch_iam_role_arn\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn) | The ARN of the IAM role used when pushing logs to Cloudwatch log group |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_destination_arn\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_destination\\_arn](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_destination\\_arn) | The ARN of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_destination_type\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_destination\\_type](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_destination\\_type) | The type of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_id\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_id](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_default\\_vpc\\_flow\\_log\\_id) | The ID of the Flow Log resource |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_cloudwatch_iam_role_arn\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_cloudwatch\\_iam\\_role\\_arn) | The ARN of the IAM role used when pushing logs to Cloudwatch log group |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_destination_arn\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_destination\\_arn](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_destination\\_arn) | The ARN of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_destination_type\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_destination\\_type](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_destination\\_type) | The type of the destination for VPC Flow Logs |\n| \u003ca name=\"output_vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_id\"\u003e\u003c/a\u003e [vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_id](#output\\_vpc\\_with\\_flow\\_logs\\_cloudwatch\\_logs\\_vpc\\_flow\\_log\\_id) | The ID of the Flow Log resource |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_id",
                    "description": "The ID of the Flow Log resource"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_destination_type",
                    "description": "The type of the destination for VPC Flow Logs"
                },
                {
                    "name": "vpc_flow_logs_s3_bucket_vpc_flow_log_destination_arn",
                    "description": "The ARN of the destination for VPC Flow Logs"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_id",
                    "description": "The ID of the Flow Log resource"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_destination_arn",
                    "description": "The ARN of the destination for VPC Flow Logs"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_cloudwatch_iam_role_arn",
                    "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                },
                {
                    "name": "vpc_flow_logs_s3_bucket_vpc_flow_log_id",
                    "description": "The ID of the Flow Log resource"
                },
                {
                    "name": "vpc_flow_logs_s3_bucket_vpc_flow_log_destination_type",
                    "description": "The type of the destination for VPC Flow Logs"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_default_vpc_flow_log_destination_type",
                    "description": "The type of the destination for VPC Flow Logs"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_destination_arn",
                    "description": "The ARN of the destination for VPC Flow Logs"
                },
                {
                    "name": "vpc_with_flow_logs_cloudwatch_logs_vpc_flow_log_cloudwatch_iam_role_arn",
                    "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                }
            ],
            "dependencies": [
                {
                    "name": "s3_bucket",
                    "source": "terraform-aws-modules/s3-bucket/aws",
                    "version": "~\u003e 1.0"
                }
            ],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                },
                {
                    "name": "random",
                    "namespace": "",
                    "source": "hashicorp/random",
                    "version": "\u003e= 2"
                }
            ],
            "resources": [
                {
                    "name": "flow_log",
                    "type": "aws_cloudwatch_log_group"
                },
                {
                    "name": "vpc_flow_log_cloudwatch",
                    "type": "aws_iam_role"
                },
                {
                    "name": "vpc_flow_log_cloudwatch",
                    "type": "aws_iam_role_policy_attachment"
                },
                {
                    "name": "vpc_flow_log_cloudwatch",
                    "type": "aws_iam_policy"
                },
                {
                    "name": "this",
                    "type": "random_pet"
                }
            ]
        },
        {
            "path": "examples/complete-vpc",
            "name": "complete-vpc",
            "readme": "# Complete VPC\n\nConfiguration in this directory creates set of VPC resources which may be sufficient for staging or production environment (look into [simple-vpc](../simple-vpc) for more simplified setup).\n\nThere are public, private, database, ElastiCache, intra (private w/o Internet access) subnets, and NAT Gateways created in each availability zone.\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"provider_aws\"\u003e\u003c/a\u003e [aws](#provider\\_aws) | \u003e= 3.28 |\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n| \u003ca name=\"module_vpc_endpoints\"\u003e\u003c/a\u003e [vpc\\_endpoints](#module\\_vpc\\_endpoints) | ../../modules/vpc-endpoints |  |\n| \u003ca name=\"module_vpc_endpoints_nocreate\"\u003e\u003c/a\u003e [vpc\\_endpoints\\_nocreate](#module\\_vpc\\_endpoints\\_nocreate) | ../../modules/vpc-endpoints |  |\n\n## Resources\n\n| Name | Type |\n|------|------|\n| [aws_iam_policy_document.dynamodb_endpoint_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n| [aws_iam_policy_document.generic_endpoint_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n| [aws_security_group.default](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/security_group) | data source |\n| [aws_vpc_endpoint_service.dynamodb](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/vpc_endpoint_service) | data source |\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_cgw_ids\"\u003e\u003c/a\u003e [cgw\\_ids](#output\\_cgw\\_ids) | List of IDs of Customer Gateway |\n| \u003ca name=\"output_database_subnets\"\u003e\u003c/a\u003e [database\\_subnets](#output\\_database\\_subnets) | List of IDs of database subnets |\n| \u003ca name=\"output_elasticache_subnets\"\u003e\u003c/a\u003e [elasticache\\_subnets](#output\\_elasticache\\_subnets) | List of IDs of elasticache subnets |\n| \u003ca name=\"output_intra_subnets\"\u003e\u003c/a\u003e [intra\\_subnets](#output\\_intra\\_subnets) | List of IDs of intra subnets |\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_redshift_subnets\"\u003e\u003c/a\u003e [redshift\\_subnets](#output\\_redshift\\_subnets) | List of IDs of redshift subnets |\n| \u003ca name=\"output_this_customer_gateway\"\u003e\u003c/a\u003e [this\\_customer\\_gateway](#output\\_this\\_customer\\_gateway) | Map of Customer Gateway attributes |\n| \u003ca name=\"output_vpc_endpoint_lambda_dns_entry\"\u003e\u003c/a\u003e [vpc\\_endpoint\\_lambda\\_dns\\_entry](#output\\_vpc\\_endpoint\\_lambda\\_dns\\_entry) | The DNS entries for the VPC Endpoint for Lambda. |\n| \u003ca name=\"output_vpc_endpoint_lambda_id\"\u003e\u003c/a\u003e [vpc\\_endpoint\\_lambda\\_id](#output\\_vpc\\_endpoint\\_lambda\\_id) | The ID of VPC endpoint for Lambda |\n| \u003ca name=\"output_vpc_endpoint_lambda_network_interface_ids\"\u003e\u003c/a\u003e [vpc\\_endpoint\\_lambda\\_network\\_interface\\_ids](#output\\_vpc\\_endpoint\\_lambda\\_network\\_interface\\_ids) | One or more network interfaces for the VPC Endpoint for Lambda. |\n| \u003ca name=\"output_vpc_endpoint_ssm_dns_entry\"\u003e\u003c/a\u003e [vpc\\_endpoint\\_ssm\\_dns\\_entry](#output\\_vpc\\_endpoint\\_ssm\\_dns\\_entry) | The DNS entries for the VPC Endpoint for SSM. |\n| \u003ca name=\"output_vpc_endpoint_ssm_id\"\u003e\u003c/a\u003e [vpc\\_endpoint\\_ssm\\_id](#output\\_vpc\\_endpoint\\_ssm\\_id) | The ID of VPC endpoint for SSM |\n| \u003ca name=\"output_vpc_endpoint_ssm_network_interface_ids\"\u003e\u003c/a\u003e [vpc\\_endpoint\\_ssm\\_network\\_interface\\_ids](#output\\_vpc\\_endpoint\\_ssm\\_network\\_interface\\_ids) | One or more network interfaces for the VPC Endpoint for SSM. |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "redshift_subnets",
                    "description": "List of IDs of redshift subnets"
                },
                {
                    "name": "intra_subnets",
                    "description": "List of IDs of intra subnets"
                },
                {
                    "name": "vpc_endpoint_ssm_dns_entry",
                    "description": "The DNS entries for the VPC Endpoint for SSM."
                },
                {
                    "name": "this_customer_gateway",
                    "description": "Map of Customer Gateway attributes"
                },
                {
                    "name": "nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                },
                {
                    "name": "vpc_endpoint_ssm_id",
                    "description": "The ID of VPC endpoint for SSM"
                },
                {
                    "name": "vpc_endpoint_ssm_network_interface_ids",
                    "description": "One or more network interfaces for the VPC Endpoint for SSM."
                },
                {
                    "name": "cgw_ids",
                    "description": "List of IDs of Customer Gateway"
                },
                {
                    "name": "public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "elasticache_subnets",
                    "description": "List of IDs of elasticache subnets"
                },
                {
                    "name": "vpc_endpoint_lambda_network_interface_ids",
                    "description": "One or more network interfaces for the VPC Endpoint for Lambda."
                },
                {
                    "name": "vpc_endpoint_lambda_dns_entry",
                    "description": "The DNS entries for the VPC Endpoint for Lambda."
                },
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "database_subnets",
                    "description": "List of IDs of database subnets"
                },
                {
                    "name": "vpc_endpoint_lambda_id",
                    "description": "The ID of VPC endpoint for Lambda"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/ipv6",
            "name": "ipv6",
            "readme": "# VPC with IPv6 enabled\n\nConfiguration in this directory creates set of VPC resources with IPv6 enabled on VPC and subnets.\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../.. |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_ipv6_association_id\"\u003e\u003c/a\u003e [ipv6\\_association\\_id](#output\\_ipv6\\_association\\_id) | The association ID for the IPv6 CIDR block |\n| \u003ca name=\"output_ipv6_cidr_block\"\u003e\u003c/a\u003e [ipv6\\_cidr\\_block](#output\\_ipv6\\_cidr\\_block) | The IPv6 CIDR block |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "ipv6_cidr_block",
                    "description": "The IPv6 CIDR block"
                },
                {
                    "name": "ipv6_association_id",
                    "description": "The association ID for the IPv6 CIDR block"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/manage-default-vpc",
            "name": "manage-default-vpc",
            "readme": "# Manage Default VPC\n\nConfiguration in this directory does not create new VPC resources, but it adopts [Default VPC](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html) created by AWS to allow management of it using Terraform.\n\nThis is not usual type of resource in Terraform, so use it carefully. More information is [here](https://www.terraform.io/docs/providers/aws/r/default_vpc.html).\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nRun `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_default_vpc_cidr_block\"\u003e\u003c/a\u003e [default\\_vpc\\_cidr\\_block](#output\\_default\\_vpc\\_cidr\\_block) | The CIDR block of the VPC |\n| \u003ca name=\"output_default_vpc_id\"\u003e\u003c/a\u003e [default\\_vpc\\_id](#output\\_default\\_vpc\\_id) | The ID of the Default VPC |\n\u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "default_vpc_id",
                    "description": "The ID of the Default VPC"
                },
                {
                    "name": "default_vpc_cidr_block",
                    "description": "The CIDR block of the VPC"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        },
        {
            "path": "examples/secondary-cidr-blocks",
            "name": "secondary-cidr-blocks",
            "readme": "# Simple VPC with secondary CIDR blocks\n\nConfiguration in this directory creates set of VPC resources across multiple CIDR blocks.\n\nThere is a public and private subnet created per availability zone in addition to single NAT Gateway shared between all 3 availability zones.\n\n## Usage\n\nTo run this example you need to execute:\n\n```bash\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\nNote that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n\n\u003c!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n## Requirements\n\n| Name | Version |\n|------|---------|\n| \u003ca name=\"requirement_terraform\"\u003e\u003c/a\u003e [terraform](#requirement\\_terraform) | \u003e= 0.12.31 |\n| \u003ca name=\"requirement_aws\"\u003e\u003c/a\u003e [aws](#requirement\\_aws) | \u003e= 3.28 |\n\n## Providers\n\nNo providers.\n\n## Modules\n\n| Name | Source | Version |\n|------|--------|---------|\n| \u003ca name=\"module_vpc\"\u003e\u003c/a\u003e [vpc](#module\\_vpc) | ../../ |  |\n\n## Resources\n\nNo resources.\n\n## Inputs\n\nNo inputs.\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| \u003ca name=\"output_nat_public_ips\"\u003e\u003c/a\u003e [nat\\_public\\_ips](#output\\_nat\\_public\\_ips) | List of public Elastic IPs created for AWS NAT Gateway |\n| \u003ca name=\"output_private_subnets\"\u003e\u003c/a\u003e [private\\_subnets](#output\\_private\\_subnets) | List of IDs of private subnets |\n| \u003ca name=\"output_public_subnets\"\u003e\u003c/a\u003e [public\\_subnets](#output\\_public\\_subnets) | List of IDs of public subnets |\n| \u003ca name=\"output_vpc_cidr_block\"\u003e\u003c/a\u003e [vpc\\_cidr\\_block](#output\\_vpc\\_cidr\\_block) | The CIDR block of the VPC |\n| \u003ca name=\"output_vpc_id\"\u003e\u003c/a\u003e [vpc\\_id](#output\\_vpc\\_id) | The ID of the VPC |\n| \u003ca name=\"output_vpc_secondary_cidr_blocks\"\u003e\u003c/a\u003e [vpc\\_secondary\\_cidr\\_blocks](#output\\_vpc\\_secondary\\_cidr\\_blocks) | List of secondary CIDR blocks of the VPC |\n \u003c!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --\u003e\n",
            "empty": false,
            "inputs": [],
            "outputs": [
                {
                    "name": "vpc_id",
                    "description": "The ID of the VPC"
                },
                {
                    "name": "vpc_cidr_block",
                    "description": "The CIDR block of the VPC"
                },
                {
                    "name": "vpc_secondary_cidr_blocks",
                    "description": "List of secondary CIDR blocks of the VPC"
                },
                {
                    "name": "private_subnets",
                    "description": "List of IDs of private subnets"
                },
                {
                    "name": "public_subnets",
                    "description": "List of IDs of public subnets"
                },
                {
                    "name": "nat_public_ips",
                    "description": "List of public Elastic IPs created for AWS NAT Gateway"
                }
            ],
            "dependencies": [],
            "provider_dependencies": [
                {
                    "name": "aws",
                    "namespace": "",
                    "source": "hashicorp/aws",
                    "version": "\u003e= 3.28"
                }
            ],
            "resources": []
        }
    ],
    "providers": [
        "aws"
    ],
    "versions": [
        "1.0.0",
        "1.0.1",
        "1.0.2",
        "1.0.3",
        "1.0.4",
        "1.1.0",
        "1.2.0",
        "1.3.0",
        "1.4.0",
        "1.4.1",
        "1.5.0",
        "1.5.1",
        "1.6.0",
        "1.7.0",
        "1.8.0",
        "1.9.0",
        "1.9.1",
        "1.10.0",
        "1.11.0",
        "1.12.0",
        "1.13.0",
        "1.14.0",
        "1.15.0",
        "1.16.0",
        "1.17.0",
        "1.18.0",
        "1.19.0",
        "1.20.0",
        "1.21.0",
        "1.22.0",
        "1.22.1",
        "1.23.0",
        "1.24.0-pre",
        "1.25.0",
        "1.26.0",
        "1.27.0",
        "1.28.0",
        "1.29.0",
        "1.30.0",
        "1.31.0",
        "1.32.0",
        "1.33.0",
        "1.34.0",
        "1.35.0",
        "1.36.0",
        "1.37.0",
        "1.38.0",
        "1.39.0",
        "1.40.0",
        "1.41.0",
        "1.42.0",
        "1.43.0",
        "1.43.1",
        "1.43.2",
        "1.44.0",
        "1.45.0",
        "1.46.0",
        "1.47.0",
        "1.48.0",
        "1.49.0",
        "1.50.0",
        "1.51.0",
        "1.52.0",
        "1.53.0",
        "1.54.0",
        "1.55.0",
        "1.56.0",
        "1.57.0",
        "1.58.0",
        "1.59.0",
        "1.60.0",
        "1.61.0",
        "1.62.0",
        "1.63.0",
        "1.64.0",
        "1.65.0",
        "1.66.0",
        "1.67.0",
        "1.68.0",
        "1.69.0",
        "1.70.0",
        "1.71.0",
        "1.72.0",
        "1.73.0",
        "2.0.0",
        "2.1.0",
        "2.2.0",
        "2.3.0",
        "2.4.0",
        "2.5.0",
        "2.6.0",
        "2.7.0",
        "2.8.0",
        "2.9.0",
        "2.10.0",
        "2.11.0",
        "2.12.0",
        "2.13.0",
        "2.14.0",
        "2.15.0",
        "2.16.0",
        "2.17.0",
        "2.18.0",
        "2.19.0",
        "2.20.0",
        "2.21.0",
        "2.22.0",
        "2.23.0",
        "2.24.0",
        "2.25.0",
        "2.26.0",
        "2.28.0",
        "2.29.0",
        "2.30.0",
        "2.31.0",
        "2.32.0",
        "2.33.0",
        "2.34.0",
        "2.35.0",
        "2.36.0",
        "2.37.0",
        "2.38.0",
        "2.39.0",
        "2.40.0",
        "2.41.0",
        "2.42.0",
        "2.43.0",
        "2.44.0",
        "2.45.0",
        "2.46.0",
        "2.47.0",
        "2.48.0",
        "2.49.0",
        "2.50.0",
        "2.51.0",
        "2.52.0",
        "2.53.0",
        "2.54.0",
        "2.55.0",
        "2.56.0",
        "2.57.0",
        "2.58.0",
        "2.59.0",
        "2.60.0",
        "2.61.0",
        "2.62.0",
        "2.63.0",
        "2.64.0",
        "2.65.0",
        "2.66.0",
        "2.67.0",
        "2.68.0",
        "2.69.0",
        "2.70.0",
        "2.71.0",
        "2.72.0",
        "2.73.0",
        "2.74.0",
        "2.75.0",
        "2.76.0",
        "2.77.0",
        "2.78.0",
        "3.0.0",
        "3.1.0",
        "3.2.0",
        "3.3.0",
        "3.4.0",
        "3.5.0",
        "3.6.0",
        "3.7.0"
    ]
}